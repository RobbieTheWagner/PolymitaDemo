//created on: Aug 3, 2013
package org.railroad.shipping

import org.drools.runtime.process.WorkflowProcessInstance;

dialect "mvel" 
	
rule "itemWeightRejection"
    ruleflow-group "itemWeight"
    when
        i:Item(weightLb > 5000, state=="in-process")
    then
        insert( new Approval(i) )
end
 
rule "calculateItemPriceNonHazardous"
  ruleflow-group "itemPricing"
  
  when
    i : Item( priceDollars == 0 , w:weightLb > 0, type=="non-hazardous", state == "in-process" )
  then 
    i.setPriceDollars( 10*w );
    i.setState("accepted");
    update( i );
    System.out.println("Set Item Price: " + (w*10)); 
end

rule "calculateItemPriceHazardous"
  ruleflow-group "itemPricing"
  
  when
    i : Item( priceDollars == 0 , w : weightLb > 0, type == "Class 1" || type == "Class 2" || type== "Class 3" || 
              type == "Class 4" || type == "Class 5" || type == "Class 6" || type == "Class 7" || type== "Class 8" ||
              type == "Class 9", state == "in-process" )
  then 
    i.setPriceDollars( 20*w );
    i.setState("accepted");
    update( i );
    System.out.println("Set Hazard Price: " + (20*w));
end


rule "approvalHazardous"
  ruleflow-group "hazardCheck"
  when
    i:Item( type == "Class 1" || type == "Class 2" || type== "Class 3" || 
              type == "Class 4" || type == "Class 5" || type == "Class 6" || type == "Class 7" || type== "Class 8" ||
              type == "Class 9", state=="in-process")
    not Approval( itemParent==i, type=="hazardous")
  then
    insert( new Approval( i ) );
    System.out.println("Making Approval hazard");
end

rule "retractItem"
	ruleflow-group "retractItem"
	
	when
		i:Item(state=="rejected")
	then
		retract(i);
end

rule "retractApproval"
	ruleflow-group "beforeHumanTask"
	when
		approval:Approval()
		item:Item(approval.itemParent == item, state != "waiting-on-human-task")
		process:WorkflowProcessInstance()
	then
		item.setState("waiting-on-human-task");
		update(item)
		retract(approval)
		process.setVariable("approval", approval);
		process.setVariable("itemWeight", item.getWeightLb());
		process.setVariable("itemType", item.getType());
		process.setVariable("itemDescription", item.getDescription());
		process.setVariable("isApproved", "false");
end

rule "applyApproved"
	ruleflow-group "afterHumanTask"
	when
		process:WorkflowProcessInstance(state == ProcessInstance.STATE_ACTIVE)
		approval: Approval() from (Approval)process.getVariable("approval")
		isApproved: String() from (String)process.getVariable("isApproved")
		item:Item(approval.itemParent == item, state == "waiting-on-human-task")
	then
		if(isApproved.equals("true")){
			approval.setState("approved");
			item.setState("in-process");
		} else {
			approval.setState("denied");
			item.setState("rejected");
		}
		update(item);
end
