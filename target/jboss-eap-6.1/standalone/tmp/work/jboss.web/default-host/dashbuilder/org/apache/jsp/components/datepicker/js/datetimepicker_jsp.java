package org.apache.jsp.components.datepicker.js;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class datetimepicker_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final JspFactory _jspxFactory = JspFactory.getDefaultFactory();

  private static java.util.List _jspx_dependants;

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fmvc_005fcontext_0026_005furi_005fnobody;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public Object getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fmvc_005fcontext_0026_005furi_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fmvc_005fcontext_0026_005furi_005fnobody.release();
  }

  public void _jspService(HttpServletRequest request, HttpServletResponse response)
        throws java.io.IOException, ServletException {

    PageContext pageContext = null;
    HttpSession session = null;
    ServletContext application = null;
    ServletConfig config = null;
    JspWriter out = null;
    Object page = this;
    JspWriter _jspx_out = null;
    PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      response.addHeader("X-Powered-By", "JSP/2.2");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("// Javascript name: My Date Time Picker\n");
      out.write("// Date created: 16-Nov-2003 23:19\n");
      out.write("// Scripter: TengYong Ng\n");
      out.write("// Website: http://www.rainforestnet.com\n");
      out.write("// Copyright (c) 2003 TengYong Ng\n");
      out.write("// Version: 2.0.1\n");
      out.write("// Note: Permission given to use and modify this script in ANY kind of applications if header lines are left unchanged.\n");
      out.write("// Date changed: 24-Dec-2007 by Burgsoft (Holland)\n");
      out.write("// Changed: Year picker as drop down. Code optimised. Tables filled with blank fields as needed.\n");
      out.write("// Known (non fatal) issue: javascript remains running after month or year select\n");
      out.write("// New Css style version added by Yvan Lavoie (QuÃ©bec, Canada) 29-Jan-2009\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("//Global variables\n");
      out.write("var winCal;\n");
      out.write("var dtToday;\n");
      out.write("var Cal;\n");
      out.write("\n");
      out.write("var exDateTime;//Existing Date and Time\n");
      out.write("var selDate;//selected date. version 1.7\n");
      out.write("\n");
      out.write("var calSpanID = \"calBorder\"; // span ID\n");
      out.write("var domStyle = null; // span DOM object with style\n");
      out.write("var cnLeft = \"0\";//left coordinate of calendar span\n");
      out.write("var cnTop = \"0\";//top coordinate of calendar span\n");
      out.write("var xpos = 0; // mouse x position\n");
      out.write("var ypos = 0; // mouse y position\n");
      out.write("var calHeight = 0; // calendar height\n");
      out.write("var CalWidth = 208;// calendar width\n");
      out.write("var CellWidth = 30;// width of day cell.\n");
      out.write("var TimeMode = 24;// TimeMode value. 12 or 24\n");
      out.write("\n");
      out.write("//Configurable parameters\n");
      out.write("\n");
      out.write("//var WindowTitle=\"DateTime Picker\";//Date Time Picker title.\n");
      out.write("var SpanBorderColor = \"gray\";//span border color\n");
      out.write("var SpanBgColor = \"#cdcdcd\";//span background color\n");
      out.write("var WeekChar = 2;//number of character for week day. if 2 then Mo,Tu,We. if 3 then Mon,Tue,Wed.\n");
      out.write("var DateSeparator = \"-\";//Date Separator, you can change it to \"-\" if you want.\n");
      out.write("var ShowLongMonth = true;//Show long month name in Calendar header. example: \"January\".\n");
      out.write("var ShowMonthYear = true;//Show Month and Year in Calendar header.\n");
      out.write("var MonthYearColor = \"#cc0033\";//Font Color of Month and Year in Calendar header.\n");
      out.write("var WeekHeadColor = \"gray\";//Background Color in Week header.\n");
      out.write("var SundayColor = \"#D3D3D3\";//Background color of Sunday.\n");
      out.write("var SaturdayColor = \"#D3D3D3\";//Background color of Saturday.\n");
      out.write("var WeekDayColor = \"white\";//Background color of weekdays.\n");
      out.write("var FontColor = \"blue\";//color of font in Calendar day cell.\n");
      out.write("var TodayColor = \"#FFFF33\";//Background color of today.\n");
      out.write("var SelDateColor = \"#8DD53C\";//Backgrond color of selected date in textbox.\n");
      out.write("var YrSelColor = \"#cc0033\";//color of font of Year selector.\n");
      out.write("var MthSelColor = \"#cc0033\";//color of font of Month selector if \"MonthSelector\" is \"arrow\".\n");
      out.write("var ThemeBg = \"\";//Background image of Calendar window.\n");
      out.write("var CalBgColor = \"\";//Backgroud color of Calendar window.\n");
      out.write("var PrecedeZero = true;//Preceding zero [true|false]\n");
      out.write("var MondayFirstDay = false;//true:Use Monday as first day; false:Sunday as first day. [true|false]  //added in version 1.7\n");
      out.write("var UseImageFiles = true;//Use image files with \"arrows\" and \"close\" button\n");
      out.write("var calendarImagesDir = '");
      if (_jspx_meth_mvc_005fcontext_005f0(_jspx_page_context))
        return;
      out.write("';\n");
      out.write("//use the Month and Weekday in your preferred language.\n");
      out.write("var MonthName = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\"July\",\"August\", \"September\", \"October\", \"November\", \"December\"];\n");
      out.write("var WeekDayName1 = [\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"];\n");
      out.write("var WeekDayName2 = [\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\",\"Sunday\"];\n");
      out.write("\n");
      out.write("//end Configurable parameters\n");
      out.write("//end Global variable\n");
      out.write("\n");
      out.write("function NewCssCal(pCtrl, pFormat, pScroller, pShowTime, pTimeMode, pHideSeconds, event) {\n");
      out.write("    // get current date and time\n");
      out.write("    dtToday = new Date();\n");
      out.write("    Cal = new Calendar(dtToday, pCtrl);\n");
      out.write("\n");
      out.write("    if ((pShowTime != null) && (pShowTime)) {\n");
      out.write("        Cal.ShowTime = true;\n");
      out.write("        if ((pTimeMode != null) && ((pTimeMode == '12') || (pTimeMode == '24'))) {\n");
      out.write("            TimeMode = pTimeMode;\n");
      out.write("        }\n");
      out.write("        else TimeMode = '24';\n");
      out.write("\n");
      out.write("        if (pHideSeconds != null)\n");
      out.write("        {\n");
      out.write("            Cal.ShowSeconds = !pHideSeconds;\n");
      out.write("        }\n");
      out.write("        else\n");
      out.write("        {\n");
      out.write("            Cal.ShowSeconds = false;\n");
      out.write("        }\n");
      out.write("    }\n");
      out.write("    if (pCtrl != null)\n");
      out.write("        Cal.Ctrl = pCtrl;\n");
      out.write("\n");
      out.write("    if (pFormat != null)\n");
      out.write("        Cal.Format = pFormat.toUpperCase();\n");
      out.write("    else\n");
      out.write("        Cal.Format = \"MMDDYYYY\";\n");
      out.write("\n");
      out.write("    if (pScroller != null) {\n");
      out.write("        if (pScroller.toUpperCase() == \"ARROW\") {\n");
      out.write("            Cal.Scroller = \"ARROW\";\n");
      out.write("        }\n");
      out.write("        else if (pScroller.toUpperCase() == \"INPUTTEXT\") {\n");
      out.write("            Cal.Scroller = \"INPUTTEXT\";\n");
      out.write("        }\n");
      out.write("        else {\n");
      out.write("            Cal.Scroller = \"DROPDOWN\";\n");
      out.write("        }\n");
      out.write("    }\n");
      out.write("    exDateTime = document.getElementById(pCtrl).value;\n");
      out.write("\n");
      out.write("    if (exDateTime != \"\") { //Parse existing Date String\n");
      out.write("        var Sp1;//Index of Date Separator 1\n");
      out.write("        var Sp2;//Index of Date Separator 2\n");
      out.write("        var tSp1;//Index of Time Separator 1\n");
      out.write("        var tSp2;//Index of Time Separator 2\n");
      out.write("        var strMonth;\n");
      out.write("        var strDate;\n");
      out.write("        var strYear;\n");
      out.write("        var intMonth;\n");
      out.write("        var YearPattern;\n");
      out.write("        var strHour;\n");
      out.write("        var strMinute;\n");
      out.write("        var strSecond;\n");
      out.write("        //parse month\n");
      out.write("        Sp1 = exDateTime.indexOf(DateSeparator, 0);\n");
      out.write("        Sp2 = exDateTime.indexOf(DateSeparator, (parseInt(Sp1) + 1));\n");
      out.write("\n");
      out.write("        var offset = parseInt(Cal.Format.toUpperCase().lastIndexOf(\"M\")) - parseInt(Cal.Format.toUpperCase().indexOf(\"M\")) - 1;\n");
      out.write("        if ((Cal.Format.toUpperCase() == \"DDMMYYYY\") || (Cal.Format.toUpperCase() == \"DDMMMYYYY\")) {\n");
      out.write("            if (DateSeparator == \"\") {\n");
      out.write("                strMonth = exDateTime.substring(2, 4 + offset);\n");
      out.write("                strDate = exDateTime.substring(0, 2);\n");
      out.write("                strYear = exDateTime.substring(4 + offset, 8 + offset);\n");
      out.write("            }\n");
      out.write("            else {\n");
      out.write("                strMonth = exDateTime.substring(Sp1 + 1, Sp2);\n");
      out.write("                strDate = exDateTime.substring(0, Sp1);\n");
      out.write("                strYear = exDateTime.substring(Sp2 + 1, Sp2 + 5);\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("        else if ((Cal.Format.toUpperCase() == \"MMDDYYYY\") || (Cal.Format.toUpperCase() == \"MMMDDYYYY\")) {\n");
      out.write("            if (DateSeparator == \"\") {\n");
      out.write("                strMonth = exDateTime.substring(0, 2 + offset);\n");
      out.write("                strDate = exDateTime.substring(2 + offset, 4 + offset);\n");
      out.write("                strYear = exDateTime.substring(4 + offset, 8 + offset);\n");
      out.write("            }\n");
      out.write("            else {\n");
      out.write("                strMonth = exDateTime.substring(0, Sp1);\n");
      out.write("                strDate = exDateTime.substring(Sp1 + 1, Sp2);\n");
      out.write("                strYear = exDateTime.substring(Sp2 + 1, Sp2 + 5);\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("        else if ((Cal.Format.toUpperCase() == \"YYYYMMDD\") || (Cal.Format.toUpperCase() == \"YYYYMMMDD\")) {\n");
      out.write("                if (DateSeparator == \"\") {\n");
      out.write("                    strMonth = exDateTime.substring(4, 6 + offset);\n");
      out.write("                    strDate = exDateTime.substring(6 + offset, 8 + offset);\n");
      out.write("                    strYear = exDateTime.substring(0, 4);\n");
      out.write("                }\n");
      out.write("                else {\n");
      out.write("                    strMonth = exDateTime.substring(Sp1 + 1, Sp2);\n");
      out.write("                    strDate = exDateTime.substring(Sp2 + 1, Sp2 + 3);\n");
      out.write("                    strYear = exDateTime.substring(0, Sp1);\n");
      out.write("                }\n");
      out.write("            }\n");
      out.write("        if (isNaN(strMonth))\n");
      out.write("            intMonth = Cal.GetMonthIndex(strMonth);\n");
      out.write("        else\n");
      out.write("            intMonth = parseInt(strMonth, 10) - 1;\n");
      out.write("        if ((parseInt(intMonth, 10) >= 0) && (parseInt(intMonth, 10) < 12))\n");
      out.write("            Cal.Month = intMonth;\n");
      out.write("        //end parse month\n");
      out.write("        //parse Date\n");
      out.write("        if ((parseInt(strDate, 10) <= Cal.GetMonDays()) && (parseInt(strDate, 10) >= 1))\n");
      out.write("            Cal.Date = strDate;\n");
      out.write("        //end parse Date\n");
      out.write("        //parse year\n");
      out.write("        YearPattern = /^\\d{4}$/;\n");
      out.write("        if (YearPattern.test(strYear))\n");
      out.write("            Cal.Year = parseInt(strYear, 10);\n");
      out.write("        //end parse year\n");
      out.write("        //parse time\n");
      out.write("        if (Cal.ShowTime) {\n");
      out.write("            //parse AM or PM\n");
      out.write("            if (TimeMode == 12) {\n");
      out.write("                Cal.AMorPM = exDateTime.substring(exDateTime.length - 2, exDateTime.length);\n");
      out.write("            }\n");
      out.write("            tSp1 = exDateTime.indexOf(\":\", 0);\n");
      out.write("            tSp2 = exDateTime.indexOf(\":\", (parseInt(tSp1) + 1));\n");
      out.write("            if (tSp1 > 0) {\n");
      out.write("                strHour = exDateTime.substring(tSp1, (tSp1) - 2);\n");
      out.write("                Cal.SetHour(strHour);\n");
      out.write("                strMinute = exDateTime.substring(tSp1 + 1, tSp1 + 3);\n");
      out.write("                Cal.SetMinute(strMinute);\n");
      out.write("                strSecond = exDateTime.substring(tSp2 + 1, tSp2 + 3);\n");
      out.write("                Cal.SetSecond(strSecond);\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    calculateCalendarPosition(pCtrl, event);\n");
      out.write("\n");
      out.write("    selDate = new Date(Cal.Year, Cal.Month, Cal.Date);//version 1.7\n");
      out.write("    RenderCssCal(true);\n");
      out.write("}\n");
      out.write("\n");
      out.write("function RenderCssCal(bNewCal) {\n");
      out.write("    if (typeof bNewCal == \"undefined\" || !bNewCal) {\n");
      out.write("        bNewCal = false;\n");
      out.write("    }\n");
      out.write("    var vCalHeader;\n");
      out.write("    var vCalData;\n");
      out.write("    var vCalTime = \"\";\n");
      out.write("    var i;\n");
      out.write("    var j;\n");
      out.write("    var SelectStr;\n");
      out.write("    var vDayCount = 0;\n");
      out.write("    var vFirstDay;\n");
      out.write("    calHeight = 0; // reset the window height on refresh\n");
      out.write("\n");
      out.write("    // Set the default cursor for the calendar\n");
      out.write("    var winCalData = \"<span style='cursor:auto;'>\\n\";\n");
      out.write("\n");
      out.write("    if (ThemeBg == \"\") {\n");
      out.write("        CalBgColor = \"bgcolor='\" + WeekDayColor + \"'\";\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    vCalHeader = \"<table \" + CalBgColor + \" background='\" + ThemeBg + \"' bordercolor=\" + SpanBorderColor + \" class=\\\"skn-table_border\\\" cellspacing=0 cellpadding=2 width='200' valign='top'>\\n\";\n");
      out.write("    //Table for Month & Year Selector\n");
      out.write("    vCalHeader += \"<tr>\\n<td colspan='7'>\\n<table border=0 width=200 cellpadding=0 cellspacing=0>\\n<tr>\\n\";\n");
      out.write("\n");
      out.write("    //******************Month and Year selector in dropdown list************************\n");
      out.write("    if (Cal.Scroller == \"DROPDOWN\") {\n");
      out.write("        vCalHeader += \"<td align='center'><select name=\\\"MonthSelector\\\" onChange=\\\"javascript:Cal.SwitchMth(this.selectedIndex);RenderCssCal();\\\">\\n\";\n");
      out.write("        for (i = 0; i < 12; i++) {\n");
      out.write("            if (i == Cal.Month)\n");
      out.write("                SelectStr = \"Selected\";\n");
      out.write("            else\n");
      out.write("                SelectStr = \"\";\n");
      out.write("            vCalHeader += \"<option \" + SelectStr + \" value=\" + i + \">\" + MonthName[i] + \"</option>\\n\";\n");
      out.write("        }\n");
      out.write("        vCalHeader += \"</select></td>\\n\";\n");
      out.write("        //Year selector\n");
      out.write("        vCalHeader += \"<td align='center'><select name=\\\"YearSelector\\\" size=\\\"1\\\" onChange=\\\"javascript:Cal.SwitchYear(this.value);RenderCssCal();\\\">\\n\";\n");
      out.write("        for (i = 1950; i < (dtToday.getFullYear() + 5); i++) {\n");
      out.write("            if (i == Cal.Year)\n");
      out.write("                SelectStr = \"Selected\";\n");
      out.write("            else\n");
      out.write("                SelectStr = \"\";\n");
      out.write("            vCalHeader += \"<option \" + SelectStr + \" value=\" + i + \">\" + i + \"</option>\\n\";\n");
      out.write("        }\n");
      out.write("        vCalHeader += \"</select></td>\\n\";\n");
      out.write("        calHeight += 30;\n");
      out.write("    }\n");
      out.write("    //******************End Month and Year selector in dropdown list*********************\n");
      out.write("    //******************Month and Year selector in arrow*********************************\n");
      out.write("    else if (Cal.Scroller == \"ARROW\")\n");
      out.write("    {\n");
      out.write("        if (UseImageFiles)\n");
      out.write("        {\n");
      out.write("            vCalHeader += \"<td><img onmousedown='javascript:Cal.DecYear();RenderCssCal();' src=\\'\" + calendarImagesDir + \"/cal_fastreverse.gif' width='13' height='9' onmouseover='changeBorder(this, 0)' onmouseout='changeBorder(this, 1)' style='border:1px solid white'></td>\\n\";//Year scroller (decrease 1 year)\n");
      out.write("            vCalHeader += \"<td><img onmousedown='javascript:Cal.DecMonth();RenderCssCal();' src=\\'\" + calendarImagesDir + \"/cal_reverse.gif' width='13' height='9' onmouseover='changeBorder(this, 0)' onmouseout='changeBorder(this, 1)' style='border:1px solid white'></td>\\n\";//Month scroller (decrease 1 month)\n");
      out.write("            vCalHeader += \"<td width='70%' class='calR'><font color='\" + YrSelColor + \"'>\" + Cal.GetMonthName(ShowLongMonth) + \" \" + Cal.Year + \"</font></td>\\n\";//Month and Year\n");
      out.write("            vCalHeader += \"<td><img onmousedown='javascript:Cal.IncMonth();RenderCssCal();' src=\\'\" + calendarImagesDir + \"/cal_forward.gif' width='13' height='9' onmouseover='changeBorder(this, 0)' onmouseout='changeBorder(this, 1)' style='border:1px solid white'></td>\\n\";//Month scroller (increase 1 month)\n");
      out.write("            vCalHeader += \"<td><img onmousedown='javascript:Cal.IncYear();RenderCssCal();' src=\\'\" + calendarImagesDir + \"/cal_fastforward.gif' width='13' height='9' onmouseover='changeBorder(this, 0)' onmouseout='changeBorder(this, 1)' style='border:1px solid white'></td>\\n\";//Year scroller (increase 1 year)\n");
      out.write("            calHeight += 22;\n");
      out.write("        }\n");
      out.write("        else\n");
      out.write("        {\n");
      out.write("            vCalHeader += \"<td><span id='dec_year' title='reverse year' onmousedown='javascript:Cal.DecYear();RenderCssCal();' onmouseover='changeBorder(this, 0)' onmouseout='changeBorder(this, 1)' style='border:1px solid white; color:\" + YrSelColor + \"'>-</span></td>\";//Year scroller (decrease 1 year)\n");
      out.write("            vCalHeader += \"<td><span id='dec_month' title='reverse month' onmousedown='javascript:Cal.DecMonth();RenderCssCal();' onmouseover='changeBorder(this, 0)' onmouseout='changeBorder(this, 1)' style='border:1px solid white'>&lt;</span></td>\\n\";//Month scroller (decrease 1 month)\n");
      out.write("            vCalHeader += \"<td width='70%' class='calR'><font color='\" + YrSelColor + \"'>\" + Cal.GetMonthName(ShowLongMonth) + \" \" + Cal.Year + \"</font></td>\\n\";//Month and Year\n");
      out.write("            vCalHeader += \"<td><span id='inc_month' title='forward month' onmousedown='javascript:Cal.IncMonth();RenderCssCal();' onmouseover='changeBorder(this, 0)' onmouseout='changeBorder(this, 1)' style='border:1px solid white'>&gt;</span></td>\\n\";//Month scroller (increase 1 month)\n");
      out.write("            vCalHeader += \"<td><span id='inc_year' title='forward year' onmousedown='javascript:Cal.IncYear();RenderCssCal();'  onmouseover='changeBorder(this, 0)' onmouseout='changeBorder(this, 1)' style='border:1px solid white; color:\" + YrSelColor + \"'>+</span></td>\\n\";//Year scroller (increase 1 year)\n");
      out.write("            calHeight += 22;\n");
      out.write("        }\n");
      out.write("    }\n");
      out.write("    //******************Month and Year selector in dropdown list************************\n");
      out.write("    if (Cal.Scroller == \"INPUTTEXT\") {\n");
      out.write("        vCalHeader += \"<td align='center'><select class=\\\"skn-input\\\" name=\\\"MonthSelector\\\" onChange=\\\"javascript:Cal.SwitchMth(this.selectedIndex);RenderCssCal();\\\">\\n\";\n");
      out.write("        for (i = 0; i < 12; i++) {\n");
      out.write("            if (i == Cal.Month)\n");
      out.write("                SelectStr = \"Selected\";\n");
      out.write("            else\n");
      out.write("                SelectStr = \"\";\n");
      out.write("            vCalHeader += \"<option \" + SelectStr + \" value=\" + i + \">\" + MonthName[i] + \"</option>\\n\";\n");
      out.write("        }\n");
      out.write("        vCalHeader += \"</select></td>\\n\";\n");
      out.write("        //Year selector\n");
      out.write("        vCalHeader += \"<td><img onmousedown='javascript:Cal.DecYear();RenderCssCal();' src=\\'\" + calendarImagesDir + \"/cal_fastreverse.gif' width='13' height='9' onmouseover='changeBorder(this, 0)' onmouseout='changeBorder(this, 1)' style='border:1px solid white'></td>\\n\";//Year scroller (decrease 1 year)\n");
      out.write("        vCalHeader += \"<td align='center'><input class=\\\"skn-input\\\" name=\\\"YearSelector\\\" size=\\\"4\\\" maxlength=\\\"4\\\" value=\\\"\" + Cal.Year + \"\\\"onChange=\\\"javascript:Cal.SetYear(this.value);RenderCssCal();\\\">\\n\";\n");
      out.write("        vCalHeader += \"</td>\\n\";\n");
      out.write("        vCalHeader += \"<td><img onmousedown='javascript:Cal.IncYear();RenderCssCal();' src=\\'\" + calendarImagesDir + \"/cal_fastforward.gif' width='13' height='9' onmouseover='changeBorder(this, 0)' onmouseout='changeBorder(this, 1)' style='border:1px solid white'></td>\\n\";//Year scroller (increase 1 year)\n");
      out.write("        calHeight += 30;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    vCalHeader += \"<td><img onmousedown='javascript:closewin(\\\"\" + Cal.Ctrl + \"\\\");' src=\\'\" + calendarImagesDir + \"/cal_close.gif' width='16' height='14' onmouseover='changeBorder(this, 0)' onmouseout='changeBorder(this, 1)' style='border:1px solid white'></td>\";\n");
      out.write("\n");
      out.write("    vCalHeader += \"</tr>\\n</table>\\n</td>\\n</tr>\\n\";\n");
      out.write("    //******************End Month and Year selector in arrow******************************\n");
      out.write("    //Calendar header shows Month and Year\n");
      out.write("    if ((ShowMonthYear) && (Cal.Scroller == \"DROPDOWN\")) {\n");
      out.write("        vCalHeader += \"<tr><td colspan='7' class='calR'>\\n<font color='\" + MonthYearColor + \"'>\" + Cal.GetMonthName(ShowLongMonth) + \" \" + Cal.Year + \"</font>\\n</td></tr>\\n\";\n");
      out.write("        calHeight += 19;\n");
      out.write("    }\n");
      out.write("    //Week day header\n");
      out.write("    vCalHeader += \"<tr bgcolor=\" + WeekHeadColor + \">\\n\";\n");
      out.write("    var WeekDayName = new Array();//Added version 1.7\n");
      out.write("    if (MondayFirstDay)\n");
      out.write("        WeekDayName = WeekDayName2;\n");
      out.write("    else\n");
      out.write("        WeekDayName = WeekDayName1;\n");
      out.write("    for (i = 0; i < 7; i++) {\n");
      out.write("        vCalHeader += \"<td width='\" + CellWidth + \"' class='calTD'><font color='white'>\" + WeekDayName[i].substr(0, WeekChar) + \"</font></td>\\n\";\n");
      out.write("    }\n");
      out.write("    calHeight += 19;\n");
      out.write("    vCalHeader += \"</tr>\\n\";\n");
      out.write("    //Calendar detail\n");
      out.write("    var CalDate = new Date(Cal.Year, Cal.Month);\n");
      out.write("    CalDate.setDate(1);\n");
      out.write("    vFirstDay = CalDate.getDay();\n");
      out.write("    //Added version 1.7\n");
      out.write("    if (MondayFirstDay) {\n");
      out.write("        vFirstDay -= 1;\n");
      out.write("        if (vFirstDay == -1)\n");
      out.write("            vFirstDay = 6;\n");
      out.write("    }\n");
      out.write("    //Added version 1.7\n");
      out.write("    vCalData = \"<tr>\";\n");
      out.write("    calHeight += 19;\n");
      out.write("    for (i = 0; i < vFirstDay; i++) {\n");
      out.write("        vCalData = vCalData + GenCell(null, null, null);\n");
      out.write("        vDayCount = vDayCount + 1;\n");
      out.write("    }\n");
      out.write("    //Added version 1.7\n");
      out.write("    for (j = 1; j <= Cal.GetMonDays(); j++) {\n");
      out.write("        var strCell;\n");
      out.write("        if ((vDayCount % 7 == 0) && (j > 1)) {\n");
      out.write("            vCalData = vCalData + \"\\n<tr>\";\n");
      out.write("        }\n");
      out.write("        vDayCount = vDayCount + 1;\n");
      out.write("        if ((j == dtToday.getDate()) && (Cal.Month == dtToday.getMonth()) && (Cal.Year == dtToday.getFullYear()))\n");
      out.write("            strCell = GenCell(j, true, TodayColor);//Highlight today's date\n");
      out.write("        else {\n");
      out.write("            if ((j == selDate.getDate()) && (Cal.Month == selDate.getMonth()) && (Cal.Year == selDate.getFullYear())) { //modified version 1.7\n");
      out.write("                strCell = GenCell(j, true, SelDateColor);\n");
      out.write("            }\n");
      out.write("            else {\n");
      out.write("                if (MondayFirstDay) {\n");
      out.write("                    if (vDayCount % 7 == 0)\n");
      out.write("                        strCell = GenCell(j, false, SundayColor);\n");
      out.write("                    else if ((vDayCount + 1) % 7 == 0)\n");
      out.write("                        strCell = GenCell(j, false, SaturdayColor);\n");
      out.write("                    else\n");
      out.write("                        strCell = GenCell(j, null, WeekDayColor);\n");
      out.write("                }\n");
      out.write("                else {\n");
      out.write("                    if (vDayCount % 7 == 0)\n");
      out.write("                        strCell = GenCell(j, false, SaturdayColor);\n");
      out.write("                    else if ((vDayCount + 6) % 7 == 0)\n");
      out.write("                        strCell = GenCell(j, false, SundayColor);\n");
      out.write("                    else\n");
      out.write("                        strCell = GenCell(j, null, WeekDayColor);\n");
      out.write("                }\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("        vCalData = vCalData + strCell;\n");
      out.write("\n");
      out.write("        if ((vDayCount % 7 == 0) && (j < Cal.GetMonDays())) {\n");
      out.write("            vCalData = vCalData + \"\\n</tr>\";\n");
      out.write("            calHeight += 19;\n");
      out.write("        }\n");
      out.write("    }\n");
      out.write("    // finish the table proper\n");
      out.write("    if (!(vDayCount % 7) == 0) {\n");
      out.write("        while (!(vDayCount % 7) == 0) {\n");
      out.write("            vCalData = vCalData + GenCell(null, null, null);\n");
      out.write("            vDayCount = vDayCount + 1;\n");
      out.write("        }\n");
      out.write("    }\n");
      out.write("    vCalData = vCalData + \"\\n</tr>\";\n");
      out.write("\n");
      out.write("    //Time picker\n");
      out.write("    if (Cal.ShowTime)\n");
      out.write("    {\n");
      out.write("        var showHour;\n");
      out.write("        var ShowArrows = false;\n");
      out.write("        var HourCellWidth = \"35px\"; //cell width with seconds.\n");
      out.write("        showHour = Cal.getShowHour();\n");
      out.write("\n");
      out.write("        if (!Cal.ShowSeconds && TimeMode == 24)\n");
      out.write("        {\n");
      out.write("            ShowArrows = true;\n");
      out.write("            HourCellWidth = \"10px\";\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        vCalTime = \"\\n<tr>\\n<td colspan='7' align='center'><center>\\n<table border='0' width='199px' cellpadding='0' cellspacing='2'>\\n<tr>\\n<td height='5px' width='\" + HourCellWidth + \"'>&nbsp;</td>\\n\";\n");
      out.write("\n");
      out.write("        if (ShowArrows && UseImageFiles)\n");
      out.write("        {\n");
      out.write("            vCalTime += \"<td align='center'><table cellspacing='0' cellpadding='0' style='line-height:0pt'><tr><td><img onmousedown='javascript:Cal.SetHour(Cal.Hours + 1);RenderCssCal();' src=\\'\" + calendarImagesDir + \"/cal_plus.gif' width='13' height='9' onmouseover='changeBorder(this, 0)' onmouseout='changeBorder(this, 1)' style='border:1px solid white'></td></tr><tr><td><img onmousedown='javascript:Cal.SetHour(Cal.Hours - 1);RenderCssCal();' src=\\'\" + calendarImagesDir + \"/cal_minus.gif' width='13' height='9' onmouseover='changeBorder(this, 0)' onmouseout='changeBorder(this, 1)' style='border:1px solid white'></td></tr></table></td>\\n\";\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        vCalTime += \"<td align='center' width='22px'><input type='text' name='hour' class=\\\"skn-input\\\" maxlength=2 size=1 style=\\\"WIDTH: 22px\\\" value=\" + showHour + \" onChange=\\\"javascript:Cal.SetHour(this.value)\\\">\";\n");
      out.write("        vCalTime += \"</td><td align='center'>:</td><td align='center' width='22px'>\";\n");
      out.write("        vCalTime += \"<input type='text' class=\\\"skn-input\\\" name='minute' maxlength=2 size=1 style=\\\"WIDTH: 22px\\\" value=\" + Cal.Minutes + \" onChange=\\\"javascript:Cal.SetMinute(this.value)\\\">\";\n");
      out.write("\n");
      out.write("        if (Cal.ShowSeconds) {\n");
      out.write("            vCalTime += \"</td><td align='center'>:</td><td align='center' width='22px'>\";\n");
      out.write("            vCalTime += \"<input type='text' class=\\\"skn-input\\\" name='second' maxlength=2 size=1 style=\\\"WIDTH: 22px\\\" value=\" + Cal.Seconds + \" onChange=\\\"javascript:Cal.SetSecond(parseInt(this.value,10))\\\">\";\n");
      out.write("        }\n");
      out.write("        if (TimeMode == 12) {\n");
      out.write("            var SelectAm = (Cal.AMorPM == \"AM\") ? \"Selected\" : \"\";\n");
      out.write("            var SelectPm = (Cal.AMorPM == \"PM\") ? \"Selected\" : \"\";\n");
      out.write("\n");
      out.write("            vCalTime += \"</td><td>\";\n");
      out.write("            vCalTime += \"<select name=\\\"ampm\\\" onChange=\\\"javascript:Cal.SetAmPm(this.options[this.selectedIndex].value);\\\">\\n\";\n");
      out.write("            vCalTime += \"<option \" + SelectAm + \" value=\\\"AM\\\">AM</option>\";\n");
      out.write("            vCalTime += \"<option \" + SelectPm + \" value=\\\"PM\\\">PM<option>\";\n");
      out.write("            vCalTime += \"</select>\";\n");
      out.write("        }\n");
      out.write("        if (ShowArrows && UseImageFiles) {\n");
      out.write("            vCalTime += \"</td>\\n<td align='center'><table cellspacing='0' cellpadding='0' style='line-height:0pt'><tr><td><img onmousedown='javascript:Cal.SetMinute(parseInt(Cal.Minutes,10) + 1);RenderCssCal();' src=\\'\" + calendarImagesDir + \"/cal_plus.gif' width='13px' height='9px' onmouseover='changeBorder(this, 0)' onmouseout='changeBorder(this, 1)' style='border:1px solid white'></td></tr><tr><td><img onmousedown='javascript:Cal.SetMinute(parseInt(Cal.Minutes,10) - 1);RenderCssCal();' src=\\'\" + calendarImagesDir + \"/cal_minus.gif' width='13px' height='9px' onmouseover='changeBorder(this, 0)' onmouseout='changeBorder(this, 1)' style='border:1px solid white'></td></tr></table>\";\n");
      out.write("        }\n");
      out.write("        vCalTime += \"</td>\\n<td align='right' valign='bottom' width='\" + HourCellWidth + \"'>\";\n");
      out.write("\n");
      out.write("    }\n");
      out.write("    else\n");
      out.write("    {\n");
      out.write("        vCalTime += \"\\n<tr>\\n<td colspan='7' align='right'>\";\n");
      out.write("    }\n");
      out.write("    /*  Moved to top of the window\n");
      out.write("     if (UseImageFiles)\n");
      out.write("     {\n");
      out.write("     vCalTime += \"<img onmousedown='javascript:closewin(\\\"\" + Cal.Ctrl + \"\\\");' src=\\'\" + calendarImagesDir + \"/cal_close.gif' width='16' height='14' onmouseover='changeBorder(this, 0)' onmouseout='changeBorder(this, 1)' style='border:1px solid white'></td>\";\n");
      out.write("     }\n");
      out.write("     else\n");
      out.write("     {\n");
      out.write("     vCalTime += \"<span id='close_cal' title='close' onmousedown='javascript:closewin(\\\"\" + Cal.Ctrl + \"\\\");' onmouseover='changeBorder(this, 0)' onmouseout='changeBorder(this, 1)' style='border:1px solid white; font-family: Arial;font-size: 10pt;'>x</span></td>\";\n");
      out.write("     } */\n");
      out.write("\n");
      out.write("    vCalTime += \"</tr>\\n</table></center>\\n</td>\\n</tr>\";\n");
      out.write("    calHeight += 31;\n");
      out.write("    vCalTime += \"\\n</table>\\n</span>\";\n");
      out.write("\n");
      out.write("    //end time picker\n");
      out.write("    var funcCalback = \"function callback(id, datum) {\\n\";\n");
      out.write("    funcCalback += \" winCal.style.visibility='hidden';\\n \" +\n");
      out.write("                   \"var CalId = document.getElementById(id); \" +\n");
      out.write("                   \"if(!CalId) return;\" +\n");
      out.write("                   \"CalId.value=datum;\\n\";\n");
      out.write("    funcCalback += \" if (Cal.ShowTime) {\\n\";\n");
      out.write("    funcCalback += \" CalId.value+=' '+Cal.getShowHour()+':'+Cal.Minutes;\\n\";\n");
      out.write("    funcCalback += \" if (Cal.ShowSeconds)\\n  CalId.value+=':'+Cal.Seconds;\\n\";\n");
      out.write("    funcCalback += \" if (TimeMode==12)\\n  CalId.value+=' '+Cal.getShowAMorPM();\\n\";\n");
      out.write("    funcCalback += \"}\\n CalId.focus(); if(CalId.onchange) CalId.onchange(); \\n }\\n\";\n");
      out.write("\n");
      out.write("    // determines if there is enough space to open the cal above the position where it is called: Not wanted! we prefer under!\n");
      out.write("    /*if (ypos > calHeight) {\n");
      out.write("     ypos = ypos - calHeight;\n");
      out.write("     } */\n");
      out.write("    if (winCal == undefined) {\n");
      out.write("        var headID = document.getElementsByTagName(\"head\")[0];\n");
      out.write("\n");
      out.write("        // add javascript function to the span cal\n");
      out.write("        var e = document.createElement(\"script\");\n");
      out.write("        e.type = \"text/javascript\";\n");
      out.write("        e.language = \"javascript\";\n");
      out.write("        e.text = funcCalback;\n");
      out.write("        headID.appendChild(e);\n");
      out.write("\n");
      out.write("        // add stylesheet to the span cal\n");
      out.write("        var cssStr = \".calTD {font-family: verdana; font-size: 12px; text-align: center;}\\n\";\n");
      out.write("        cssStr += \".calR {font-family: verdana; font-size: 12px; text-align: center; font-weight: bold; color: red;}\";\n");
      out.write("        var style = document.createElement(\"style\");\n");
      out.write("        style.type = \"text/css\";\n");
      out.write("        style.rel = \"stylesheet\";\n");
      out.write("        if (style.styleSheet) { // IE\n");
      out.write("            style.styleSheet.cssText = cssStr;\n");
      out.write("        }\n");
      out.write("        else { // w3c\n");
      out.write("            var cssText = document.createTextNode(cssStr);\n");
      out.write("            style.appendChild(cssText);\n");
      out.write("        }\n");
      out.write("        headID.appendChild(style);\n");
      out.write("\n");
      out.write("        // create the outer frame that allows the cal. to be moved\n");
      out.write("        var span = document.createElement(\"span\");\n");
      out.write("        span.id = calSpanID;\n");
      out.write("\n");
      out.write("        with (span.style) {\n");
      out.write("            position = \"absolute\";\n");
      out.write("            left = (xpos + 8) + 'px';\n");
      out.write("            top = (ypos - 8) + 'px';\n");
      out.write("            width = CalWidth;\n");
      out.write("            border = \"solid 3pt \" + SpanBorderColor;\n");
      out.write("            padding = \"0pt\";\n");
      out.write("            backgroundColor = SpanBgColor;\n");
      out.write("            zIndex = 99999900;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        document.body.appendChild(span);\n");
      out.write("        winCal = document.getElementById(calSpanID);\n");
      out.write("    }\n");
      out.write("    else {\n");
      out.write("        winCal.style.visibility = \"visible\";\n");
      out.write("        winCal.style.Height = calHeight;\n");
      out.write("\n");
      out.write("        // set the position for a new calendar only\n");
      out.write("        if (bNewCal) {\n");
      out.write("            winCal.style.left = (xpos + 8) + 'px';\n");
      out.write("            winCal.style.top = (ypos - 8) + 'px';\n");
      out.write("        }\n");
      out.write("    }\n");
      out.write("    winCal.innerHTML = winCalData + vCalHeader + vCalData + vCalTime;\n");
      out.write("    return true;\n");
      out.write("}\n");
      out.write("\n");
      out.write("function GenCell(pValue, pHighLight, pColor) { //Generate table cell with value\n");
      out.write("    var PValue;\n");
      out.write("    var PCellStr;\n");
      out.write("    var vColor;\n");
      out.write("    var vHLstr1;//HighLight string\n");
      out.write("    var vHLstr2;\n");
      out.write("    var vTimeStr;\n");
      out.write("\n");
      out.write("    if (pValue == null)\n");
      out.write("        PValue = \"\";\n");
      out.write("    else\n");
      out.write("        PValue = pValue;\n");
      out.write("\n");
      out.write("    if (pColor != null)\n");
      out.write("        vColor = \"bgcolor=\\\"\" + pColor + \"\\\"\";\n");
      out.write("    else\n");
      out.write("        vColor = CalBgColor;\n");
      out.write("    if ((pHighLight != null) && (pHighLight)) {\n");
      out.write("        vHLstr1 = \"<font class='calR'>\";\n");
      out.write("        vHLstr2 = \"</font>\";\n");
      out.write("    }\n");
      out.write("    else {\n");
      out.write("        vHLstr1 = \"\";\n");
      out.write("        vHLstr2 = \"\";\n");
      out.write("    }\n");
      out.write("    if (Cal.ShowTime) {\n");
      out.write("        vTimeStr = ' ' + Cal.Hours + ':' + Cal.Minutes;\n");
      out.write("        if (Cal.ShowSeconds)\n");
      out.write("            vTimeStr += ':' + Cal.Seconds;\n");
      out.write("        if (TimeMode == 12)\n");
      out.write("            vTimeStr += ' ' + Cal.AMorPM;\n");
      out.write("    }\n");
      out.write("    else\n");
      out.write("        vTimeStr = \"\";\n");
      out.write("    if (PValue != \"\")\n");
      out.write("        PCellStr = \"\\n<td \" + vColor + \" class='calTD' style='cursor: pointer;' onClick=\\\"javascript:callback('\" + Cal.Ctrl + \"','\" + Cal.FormatDate(PValue) + \"');\\\">\" + vHLstr1 + PValue + vHLstr2 + \"</td>\";\n");
      out.write("    else\n");
      out.write("        PCellStr = \"\\n<td \" + vColor + \" class='calTD'>&nbsp;</td>\";\n");
      out.write("    return PCellStr;\n");
      out.write("}\n");
      out.write("\n");
      out.write("function Calendar(pDate, pCtrl) {\n");
      out.write("    //Properties\n");
      out.write("    this.Date = pDate.getDate();//selected date\n");
      out.write("    this.Month = pDate.getMonth();//selected month number\n");
      out.write("    this.Year = pDate.getFullYear();//selected year in 4 digits\n");
      out.write("    this.Hours = pDate.getHours();\n");
      out.write("\n");
      out.write("    if (pDate.getMinutes() < 10)\n");
      out.write("        this.Minutes = \"0\" + pDate.getMinutes();\n");
      out.write("    else\n");
      out.write("        this.Minutes = pDate.getMinutes();\n");
      out.write("\n");
      out.write("    if (pDate.getSeconds() < 10)\n");
      out.write("        this.Seconds = \"0\" + pDate.getSeconds();\n");
      out.write("    else\n");
      out.write("        this.Seconds = pDate.getSeconds();\n");
      out.write("\n");
      out.write("    this.MyWindow = winCal;\n");
      out.write("    this.Ctrl = pCtrl;\n");
      out.write("    this.Format = \"ddMMyyyy\";\n");
      out.write("    this.Separator = DateSeparator;\n");
      out.write("    this.ShowTime = false;\n");
      out.write("    this.Scroller = \"DROPDOWN\";\n");
      out.write("    if (pDate.getHours() < 12)\n");
      out.write("        this.AMorPM = \"AM\";\n");
      out.write("    else\n");
      out.write("        this.AMorPM = \"PM\";\n");
      out.write("    this.ShowSeconds = true;\n");
      out.write("}\n");
      out.write("\n");
      out.write("function GetMonthIndex(shortMonthName) {\n");
      out.write("    for (var i = 0; i < 12; i++) {\n");
      out.write("        if (MonthName[i].substring(0, 3).toUpperCase() == shortMonthName.toUpperCase())\n");
      out.write("        {\n");
      out.write("            return i;\n");
      out.write("        }\n");
      out.write("    }\n");
      out.write("    return 0;\n");
      out.write("}\n");
      out.write("Calendar.prototype.GetMonthIndex = GetMonthIndex;\n");
      out.write("\n");
      out.write("function IncYear() {\n");
      out.write("    Cal.Year++;\n");
      out.write("}\n");
      out.write("Calendar.prototype.IncYear = IncYear;\n");
      out.write("\n");
      out.write("function DecYear() {\n");
      out.write("    Cal.Year--;\n");
      out.write("}\n");
      out.write("Calendar.prototype.DecYear = DecYear;\n");
      out.write("\n");
      out.write("function IncMonth() {\n");
      out.write("    Cal.Month++;\n");
      out.write("    if (Cal.Month >= 12) {\n");
      out.write("        Cal.Month = 0;\n");
      out.write("        Cal.IncYear();\n");
      out.write("    }\n");
      out.write("}\n");
      out.write("Calendar.prototype.IncMonth = IncMonth;\n");
      out.write("\n");
      out.write("function DecMonth() {\n");
      out.write("    Cal.Month--;\n");
      out.write("    if (Cal.Month < 0) {\n");
      out.write("        Cal.Month = 11;\n");
      out.write("        Cal.DecYear();\n");
      out.write("    }\n");
      out.write("}\n");
      out.write("Calendar.prototype.DecMonth = DecMonth;\n");
      out.write("\n");
      out.write("function SwitchMth(intMth) {\n");
      out.write("    Cal.Month = intMth;\n");
      out.write("}\n");
      out.write("Calendar.prototype.SwitchMth = SwitchMth;\n");
      out.write("\n");
      out.write("function SwitchYear(intYear) {\n");
      out.write("    Cal.Year = intYear;\n");
      out.write("}\n");
      out.write("Calendar.prototype.SwitchYear = SwitchYear;\n");
      out.write("\n");
      out.write("function SetHour(intHour) {\n");
      out.write("    var MaxHour;\n");
      out.write("    var MinHour;\n");
      out.write("    if (TimeMode == 24) {\n");
      out.write("        MaxHour = 23;\n");
      out.write("        MinHour = 0;\n");
      out.write("    }\n");
      out.write("    else if (TimeMode == 12) {\n");
      out.write("        MaxHour = 12;\n");
      out.write("        MinHour = 1;\n");
      out.write("    }\n");
      out.write("    else\n");
      out.write("        alert(\"TimeMode can only be 12 or 24\");\n");
      out.write("    var HourExp = new RegExp(\"^\\\\d\\\\d\");\n");
      out.write("    var SingleDigit = new RegExp(\"\\\\d\");\n");
      out.write("\n");
      out.write("    if ((HourExp.test(intHour) || SingleDigit.test(intHour)) && (parseInt(intHour, 10) > MaxHour)) {\n");
      out.write("        intHour = MinHour;\n");
      out.write("    }\n");
      out.write("    else if ((HourExp.test(intHour) || SingleDigit.test(intHour)) && (parseInt(intHour, 10) < MinHour)) {\n");
      out.write("        intHour = MaxHour;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    if (SingleDigit.test(intHour)) {\n");
      out.write("        intHour = \"0\" + intHour + \"\";\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    if (HourExp.test(intHour) && (parseInt(intHour, 10) <= MaxHour) && (parseInt(intHour, 10) >= MinHour)) {\n");
      out.write("        if ((TimeMode == 12) && (Cal.AMorPM == \"PM\")) {\n");
      out.write("            if (parseInt(intHour, 10) == 12)\n");
      out.write("                Cal.Hours = 12;\n");
      out.write("            else\n");
      out.write("                Cal.Hours = parseInt(intHour, 10) + 12;\n");
      out.write("        }\n");
      out.write("        else if ((TimeMode == 12) && (Cal.AMorPM == \"AM\")) {\n");
      out.write("            if (intHour == 12)\n");
      out.write("                intHour -= 12;\n");
      out.write("            Cal.Hours = parseInt(intHour, 10);\n");
      out.write("        }\n");
      out.write("        else if (TimeMode == 24)\n");
      out.write("                Cal.Hours = parseInt(intHour, 10);\n");
      out.write("    }\n");
      out.write("}\n");
      out.write("Calendar.prototype.SetHour = SetHour;\n");
      out.write("\n");
      out.write("function SetMinute(intMin) {\n");
      out.write("    var MaxMin = 59;\n");
      out.write("    var MinMin = 0;\n");
      out.write("    var SingleDigit = new RegExp(\"\\\\d\");\n");
      out.write("    var SingleDigit2 = new RegExp(\"^\\\\d{1}$\");\n");
      out.write("    var MinExp = new RegExp(\"^\\\\d{2}$\");\n");
      out.write("\n");
      out.write("    if ((MinExp.test(intMin) || SingleDigit.test(intMin)) && (parseInt(intMin, 10) > MaxMin)) {\n");
      out.write("        intMin = MinMin;\n");
      out.write("    }\n");
      out.write("    else if ((MinExp.test(intMin) || SingleDigit.test(intMin)) && (parseInt(intMin, 10) < MinMin)) {\n");
      out.write("        intMin = MaxMin;\n");
      out.write("    }\n");
      out.write("    var strMin = intMin + \"\";\n");
      out.write("    if (SingleDigit2.test(intMin)) {\n");
      out.write("        strMin = \"0\" + strMin + \"\";\n");
      out.write("    }\n");
      out.write("    if ((MinExp.test(intMin) || SingleDigit.test(intMin))\n");
      out.write("            && (parseInt(intMin, 10) <= 59) && (parseInt(intMin, 10) >= 0)) {\n");
      out.write("        Cal.Minutes = strMin;\n");
      out.write("    }\n");
      out.write("}\n");
      out.write("Calendar.prototype.SetMinute = SetMinute;\n");
      out.write("\n");
      out.write("function SetSecond(intSec) {\n");
      out.write("    var MaxSec = 59;\n");
      out.write("    var MinSec = 0;\n");
      out.write("    var SingleDigit = new RegExp(\"\\\\d\");\n");
      out.write("    var SingleDigit2 = new RegExp(\"^\\\\d{1}$\");\n");
      out.write("    var SecExp = new RegExp(\"^\\\\d{2}$\");\n");
      out.write("\n");
      out.write("    if ((SecExp.test(intSec) || SingleDigit.test(intSec)) && (parseInt(intSec, 10) > MaxSec)) {\n");
      out.write("        intSec = MinSec;\n");
      out.write("    }\n");
      out.write("    else if ((SecExp.test(intSec) || SingleDigit.test(intSec)) && (parseInt(intSec, 10) < MinSec)) {\n");
      out.write("        intSec = MaxSec;\n");
      out.write("    }\n");
      out.write("    var strSec = intSec + \"\";\n");
      out.write("    if (SingleDigit2.test(intSec)) {\n");
      out.write("        strSec = \"0\" + strSec + \"\";\n");
      out.write("    }\n");
      out.write("    if ((SecExp.test(intSec) || SingleDigit.test(intSec))\n");
      out.write("            && (parseInt(intSec, 10) <= 59) && (parseInt(intSec, 10) >= 0)) {\n");
      out.write("        Cal.Seconds = strSec;\n");
      out.write("    }\n");
      out.write("}\n");
      out.write("Calendar.prototype.SetSecond = SetSecond;\n");
      out.write("\n");
      out.write("function SetAmPm(pvalue) {\n");
      out.write("    this.AMorPM = pvalue;\n");
      out.write("    if (pvalue == \"PM\") {\n");
      out.write("        this.Hours = (parseInt(this.Hours, 10)) + 12;\n");
      out.write("        if (this.Hours == 24)\n");
      out.write("            this.Hours = 12;\n");
      out.write("    }\n");
      out.write("    else if (pvalue == \"AM\")\n");
      out.write("        this.Hours -= 12;\n");
      out.write("}\n");
      out.write("Calendar.prototype.SetAmPm = SetAmPm;\n");
      out.write("\n");
      out.write("function getShowHour() {\n");
      out.write("    var finalHour;\n");
      out.write("    if (TimeMode == 12) {\n");
      out.write("        if (parseInt(this.Hours, 10) == 0) {\n");
      out.write("            this.AMorPM = \"AM\";\n");
      out.write("            finalHour = parseInt(this.Hours, 10) + 12;\n");
      out.write("        }\n");
      out.write("        else if (parseInt(this.Hours, 10) == 12) {\n");
      out.write("            this.AMorPM = \"PM\";\n");
      out.write("            finalHour = 12;\n");
      out.write("        }\n");
      out.write("        else if (this.Hours > 12) {\n");
      out.write("                this.AMorPM = \"PM\";\n");
      out.write("                if ((this.Hours - 12) < 10)\n");
      out.write("                    finalHour = \"0\" + ((parseInt(this.Hours, 10)) - 12);\n");
      out.write("                else\n");
      out.write("                    finalHour = parseInt(this.Hours, 10) - 12;\n");
      out.write("            }\n");
      out.write("            else {\n");
      out.write("                this.AMorPM = \"AM\";\n");
      out.write("                if (this.Hours < 10)\n");
      out.write("                    finalHour = \"0\" + parseInt(this.Hours, 10);\n");
      out.write("                else\n");
      out.write("                    finalHour = this.Hours;\n");
      out.write("            }\n");
      out.write("    }\n");
      out.write("    else if (TimeMode == 24) {\n");
      out.write("        if (this.Hours < 10)\n");
      out.write("            finalHour = \"0\" + parseInt(this.Hours, 10);\n");
      out.write("        else\n");
      out.write("            finalHour = this.Hours;\n");
      out.write("    }\n");
      out.write("    return finalHour;\n");
      out.write("}\n");
      out.write("Calendar.prototype.getShowHour = getShowHour;\n");
      out.write("\n");
      out.write("function getShowAMorPM() {\n");
      out.write("    return this.AMorPM;\n");
      out.write("}\n");
      out.write("Calendar.prototype.getShowAMorPM = getShowAMorPM;\n");
      out.write("\n");
      out.write("function GetMonthName(IsLong) {\n");
      out.write("    var Month = MonthName[this.Month];\n");
      out.write("    if (IsLong)\n");
      out.write("        return Month;\n");
      out.write("    else\n");
      out.write("        return Month.substr(0, 3);\n");
      out.write("}\n");
      out.write("Calendar.prototype.GetMonthName = GetMonthName;\n");
      out.write("\n");
      out.write("function GetMonDays() { //Get number of days in a month\n");
      out.write("    var DaysInMonth = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n");
      out.write("    if (this.IsLeapYear()) {\n");
      out.write("        DaysInMonth[1] = 29;\n");
      out.write("    }\n");
      out.write("    return DaysInMonth[this.Month];\n");
      out.write("}\n");
      out.write("Calendar.prototype.GetMonDays = GetMonDays;\n");
      out.write("\n");
      out.write("function IsLeapYear() {\n");
      out.write("    if ((this.Year % 4) == 0) {\n");
      out.write("        return !((this.Year % 100 == 0) && (this.Year % 400) != 0);\n");
      out.write("    }\n");
      out.write("    else {\n");
      out.write("        return false;\n");
      out.write("    }\n");
      out.write("}\n");
      out.write("Calendar.prototype.IsLeapYear = IsLeapYear;\n");
      out.write("\n");
      out.write("function FormatDate(pDate)\n");
      out.write("{\n");
      out.write("    var MonthDigit = this.Month + 1;\n");
      out.write("    if (PrecedeZero) {\n");
      out.write("        if (pDate < 10)\n");
      out.write("            pDate = \"0\" + pDate;\n");
      out.write("        if (MonthDigit < 10)\n");
      out.write("            MonthDigit = \"0\" + MonthDigit;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    if (this.Format.toUpperCase() == \"DDMMYYYY\")\n");
      out.write("        return (pDate + DateSeparator + MonthDigit + DateSeparator + this.Year);\n");
      out.write("    else if (this.Format.toUpperCase() == \"DDMMMYYYY\")\n");
      out.write("        return (pDate + DateSeparator + this.GetMonthName(false) + DateSeparator + this.Year);\n");
      out.write("    else if (this.Format.toUpperCase() == \"MMDDYYYY\")\n");
      out.write("            return (MonthDigit + DateSeparator + pDate + DateSeparator + this.Year);\n");
      out.write("        else if (this.Format.toUpperCase() == \"MMMDDYYYY\")\n");
      out.write("                return (this.GetMonthName(false) + DateSeparator + pDate + DateSeparator + this.Year);\n");
      out.write("            else if (this.Format.toUpperCase() == \"YYYYMMDD\")\n");
      out.write("                    return (this.Year + DateSeparator + MonthDigit + DateSeparator + pDate);\n");
      out.write("                else if (this.Format.toUpperCase() == \"YYYYMMMDD\")\n");
      out.write("                        return (this.Year + DateSeparator + this.GetMonthName(false) + DateSeparator + pDate);\n");
      out.write("                    else\n");
      out.write("                        return (pDate + DateSeparator + (this.Month + 1) + DateSeparator + this.Year);\n");
      out.write("}\n");
      out.write("Calendar.prototype.FormatDate = FormatDate;\n");
      out.write("\n");
      out.write("function closewin(id) {\n");
      out.write("    var CalId = document.getElementById(id);\n");
      out.write("    if (CalId) CalId.focus();\n");
      out.write("    winCal.style.visibility = 'hidden';\n");
      out.write("}\n");
      out.write("\n");
      out.write("function changeBorder(element, col) {\n");
      out.write("    if (col == 0) {\n");
      out.write("        element.style.borderColor = \"black\";\n");
      out.write("        element.style.cursor = \"pointer\";\n");
      out.write("    }\n");
      out.write("    else {\n");
      out.write("        element.style.borderColor = \"white\";\n");
      out.write("        element.style.cursor = \"auto\";\n");
      out.write("    }\n");
      out.write("}\n");
      out.write("\n");
      out.write("function calculateCalendarPosition(objectID, event) {\n");
      out.write("    var posx = 0;\n");
      out.write("    var posy = 0;\n");
      out.write("    var e = window.event;\n");
      out.write("    if (!e) {\n");
      out.write("        e = event;\n");
      out.write("    }\n");
      out.write("    if (e) {\n");
      out.write("        if (e.pageX || e.pageY) {\n");
      out.write("            posx = e.pageX;\n");
      out.write("            posy = e.pageY;\n");
      out.write("        }\n");
      out.write("        else if (e.clientX || e.clientY) {\n");
      out.write("            posx = e.clientX + document.body.scrollLeft\n");
      out.write("                    + document.documentElement.scrollLeft;\n");
      out.write("            posy = e.clientY + document.body.scrollTop\n");
      out.write("                    + document.documentElement.scrollTop;\n");
      out.write("        }\n");
      out.write("    } else {\n");
      out.write("        var obj = document.getElementById(objectID);\n");
      out.write("        posx = 0;\n");
      out.write("        posy = 0;\n");
      out.write("        posx += obj.clientWidth;\n");
      out.write("        posy += obj.clientHeight;\n");
      out.write("        if (obj.offsetParent) {\n");
      out.write("            do {\n");
      out.write("                posx += obj.offsetLeft;\n");
      out.write("                posy += obj.offsetTop;\n");
      out.write("            } while (obj = obj.offsetParent);\n");
      out.write("        }\n");
      out.write("    }\n");
      out.write("    // posx and posy contain the mouse position relative to the document\n");
      out.write("    // Do something with this information\n");
      out.write("\n");
      out.write("    xpos = posx;\n");
      out.write("    ypos = posy;\n");
      out.write("}\n");
    } catch (Throwable t) {
      if (!(t instanceof SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_mvc_005fcontext_005f0(PageContext _jspx_page_context)
          throws Throwable {
    PageContext pageContext = _jspx_page_context;
    JspWriter out = _jspx_page_context.getOut();
    //  mvc:context
    org.jboss.dashboard.ui.taglib.ContextTag _jspx_th_mvc_005fcontext_005f0 = (org.jboss.dashboard.ui.taglib.ContextTag) _005fjspx_005ftagPool_005fmvc_005fcontext_0026_005furi_005fnobody.get(org.jboss.dashboard.ui.taglib.ContextTag.class);
    _jspx_th_mvc_005fcontext_005f0.setPageContext(_jspx_page_context);
    _jspx_th_mvc_005fcontext_005f0.setParent(null);
    // /components/datepicker/js/datetimepicker.jsp(58,25) name = uri type = null reqTime = true required = true fragment = false deferredValue = false deferredMethod = false expectedTypeName = null methodSignature = null 
    _jspx_th_mvc_005fcontext_005f0.setUri("/components/datepicker/images");
    int _jspx_eval_mvc_005fcontext_005f0 = _jspx_th_mvc_005fcontext_005f0.doStartTag();
    if (_jspx_th_mvc_005fcontext_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fmvc_005fcontext_0026_005furi_005fnobody.reuse(_jspx_th_mvc_005fcontext_005f0);
      return true;
    }
    _005fjspx_005ftagPool_005fmvc_005fcontext_0026_005furi_005fnobody.reuse(_jspx_th_mvc_005fcontext_005f0);
    return false;
  }
}
