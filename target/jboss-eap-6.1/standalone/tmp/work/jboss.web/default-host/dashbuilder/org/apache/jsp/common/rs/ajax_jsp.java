package org.apache.jsp.common.rs;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import org.jboss.dashboard.ui.formatters.FactoryURL;
import org.jboss.dashboard.workspace.Parameters;
import org.jboss.dashboard.LocaleManager;
import org.jboss.dashboard.ui.HTTPSettings;
import org.jboss.dashboard.ui.panel.AjaxRefreshManager;

public final class ajax_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final JspFactory _jspxFactory = JspFactory.getDefaultFactory();

  private static java.util.List _jspx_dependants;

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fi18n_005fbundle_0026_005flocale_005fbaseName_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fi18n_005fmessage_0026_005fkey;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public Object getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fi18n_005fbundle_0026_005flocale_005fbaseName_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fi18n_005fmessage_0026_005fkey = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fi18n_005fbundle_0026_005flocale_005fbaseName_005fnobody.release();
    _005fjspx_005ftagPool_005fi18n_005fmessage_0026_005fkey.release();
  }

  public void _jspService(HttpServletRequest request, HttpServletResponse response)
        throws java.io.IOException, ServletException {

    PageContext pageContext = null;
    HttpSession session = null;
    ServletContext application = null;
    ServletConfig config = null;
    JspWriter out = null;
    Object page = this;
    JspWriter _jspx_out = null;
    PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      response.addHeader("X-Powered-By", "JSP/2.2");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      //  i18n:bundle
      org.apache.taglibs.i18n.BundleTag _jspx_th_i18n_005fbundle_005f0 = (org.apache.taglibs.i18n.BundleTag) _005fjspx_005ftagPool_005fi18n_005fbundle_0026_005flocale_005fbaseName_005fnobody.get(org.apache.taglibs.i18n.BundleTag.class);
      _jspx_th_i18n_005fbundle_005f0.setPageContext(_jspx_page_context);
      _jspx_th_i18n_005fbundle_005f0.setParent(null);
      // /common/rs/ajax.jsp(24,0) name = baseName type = null reqTime = true required = true fragment = false deferredValue = false deferredMethod = false expectedTypeName = null methodSignature = null 
      _jspx_th_i18n_005fbundle_005f0.setBaseName("org.jboss.dashboard.ui.messages");
      // /common/rs/ajax.jsp(24,0) name = locale type = null reqTime = true required = false fragment = false deferredValue = false deferredMethod = false expectedTypeName = null methodSignature = null 
      _jspx_th_i18n_005fbundle_005f0.setLocale( LocaleManager.currentLocale() );
      int _jspx_eval_i18n_005fbundle_005f0 = _jspx_th_i18n_005fbundle_005f0.doStartTag();
      if (_jspx_th_i18n_005fbundle_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        _005fjspx_005ftagPool_005fi18n_005fbundle_0026_005flocale_005fbaseName_005fnobody.reuse(_jspx_th_i18n_005fbundle_005f0);
        return;
      }
      _005fjspx_005ftagPool_005fi18n_005fbundle_0026_005flocale_005fbaseName_005fnobody.reuse(_jspx_th_i18n_005fbundle_005f0);
      out.write("\n");
      out.write("\n");
      out.write("// JBoss Inc. All rights reserved.\n");
      out.write("\n");
      out.write("// Boundary for multipart forms.  DO NOT CHANGE IT !!!\n");
      out.write("var boundary = \"AJAX_Boundary_\" + new Date().getMilliseconds() * new Date().getMilliseconds() * new Date().getMilliseconds();\n");
      out.write("var ajaxAlertsEnabled = false;\n");
      out.write("var ajaxRequestNumber = 0;\n");
      out.write("var ajaxMaxRequestNumber = ");
      out.print(request.getParameter("maxAjaxRequestAllowed") != null ? request.getParameter("maxAjaxRequestAllowed") : 50);
      out.write(";\n");
      out.write("\n");
      out.write("/**\n");
      out.write("* Loads a given url into element with id tagId. If a body is specified, it uses multipart content-type\n");
      out.write("* to POST to the url.\n");
      out.write("*/\n");
      out.write("\n");
      out.write("var value;\n");
      out.write("function ajaxRequest(url, body, tagId) {\n");
      out.write("    return ajaxRequest(url, body, tagId, null, null);\n");
      out.write("};\n");
      out.write("\n");
      out.write("function ajaxRequest(url, body, tagId, onAjaxRequestScript, onAjaxResponseScript) {\n");
      out.write("    var ajaxHandler = new Object();\n");
      out.write("    url = url.replace(/&amp;/g,'&');\n");
      out.write("    ajaxHandler.ajaxRequestScript = onAjaxRequestScript;\n");
      out.write("    ajaxHandler.ajaxResponseScript = onAjaxResponseScript;\n");
      out.write("    if (ajaxAlertsEnabled) alert(\"ajax request: \" + url + \"\\nbody:\\n\" + body + \"\\n\\non \" + tagId);\n");
      out.write("    beforeAjaxRequest();\n");
      out.write("    ajaxHandler.ajaxTarget = tagId;\n");
      out.write("\n");
      out.write("    // Execute the ajaxRequestScript specified by client.\n");
      out.write("    if (onAjaxRequestScript != null) eval(onAjaxRequestScript);\n");
      out.write("\n");
      out.write("    if (window.XMLHttpRequest) {\n");
      out.write("        ajaxHandler.ajaxReq = new XMLHttpRequest();\n");
      out.write("    }\n");
      out.write("    else if (window.ActiveXObject) {\n");
      out.write("        ajaxHandler.ajaxReq = new ActiveXObject('Microsoft.XMLHTTP');\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    ajaxHandler.ajaxResponse = function(){\n");
      out.write("        // Only if req shows \"complete\"\n");
      out.write("        var readyState, status;\n");
      out.write("        try{\n");
      out.write("            readyState = ajaxHandler.ajaxReq.readyState;\n");
      out.write("            if (readyState == 4){\n");
      out.write("                status = ajaxHandler.ajaxReq.status;}\n");
      out.write("        }\n");
      out.write("        catch(e){\n");
      out.write("        }\n");
      out.write("        if (readyState == 4) {\n");
      out.write("            // only if \"OK\"\n");
      out.write("            if (status == 200) {\n");
      out.write("                var targetElementId;\n");
      out.write("                if (ajaxHandler.ajaxReq.responseText.indexOf(\"<html>\")!=-1) {\n");
      out.write("                    // Just refresh the current screen.\n");
      out.write("                    document.location.href = '");
      out.print(request.getContextPath());
      out.write("';\n");
      out.write("                } else {\n");
      out.write("                    var element;\n");
      out.write("                    if (ajaxHandler.ajaxReq.responseText.indexOf(\"modal_component_\")!=-1){\n");
      out.write("                        element = document.getElementById(\"modal_container\");\n");
      out.write("                        // Disable the scroll bars for IE and FF\n");
      out.write("                        window.scrollTo(0,0);\n");
      out.write("                        document.body.style.overflow = 'hidden'; // IE8 & FF3.5\n");
      out.write("                        document.getElementsByTagName('html')[0].style.overflow = 'hidden';  // IE7 & IE6\n");
      out.write("                        setTimeout(\"doCenterModalDiv()\", 1);\n");
      out.write("                    } else {\n");
      out.write("                        element = document.getElementById(ajaxHandler.ajaxTarget);\n");
      out.write("                    }\n");
      out.write("                    targetElementId = element.id;\n");
      out.write("                    var newElement = document.createElement(element.tagName);\n");
      out.write("                    newElement.id = element.id;\n");
      out.write("                    //alert(\"Setting \"+ ajaxHandler.ajaxReq.responseText);\n");
      out.write("                    newElement.innerHTML = ajaxHandler.ajaxReq.responseText;\n");
      out.write("                    if (ajaxAlertsEnabled) alert(\"Set \" + newElement.outerHTML);\n");
      out.write("\n");
      out.write("                    // remove embedded objects from the old content to avoid js errors caused by flash\n");
      out.write("                    var objs = element.getElementsByTagName(\"object\");\n");
      out.write("                    if (objs) {\n");
      out.write("                        for(var i=0; i < objs.length; i++){\n");
      out.write("                            objs[i].parentNode.removeChild(objs[i]);\n");
      out.write("                        }\n");
      out.write("                    }\n");
      out.write("\n");
      out.write("                    element.parentNode.replaceChild(newElement, element);\n");
      out.write("                    // Execute the ajaxResponseScript specified by client.\n");
      out.write("                    if (ajaxHandler.ajaxResponseScript != null) eval(ajaxHandler.ajaxResponseScript);\n");
      out.write("                    try{\n");
      out.write("                        if ( tt_Init )\n");
      out.write("                            tt_Init(); /*Evaluate tooltips*/\n");
      out.write("                    } catch(e){/*Ignore errors on tooltip evaluation*/}\n");
      out.write("                    element = null;\n");
      out.write("                    newElement=null;\n");
      out.write("\n");
      out.write("                    // Parsea Script elements y los coloca en el HEAD para evitar problema de Firefox 6/7 / Chrome\n");
      out.write("                    if (FX || CH) {\n");
      out.write("                        var ob = document.getElementById(targetElementId).getElementsByTagName(\"script\");\n");
      out.write("                        var head = document.getElementsByTagName(\"head\")[0];\n");
      out.write("                        // pasamos los elementos SCRIPT al HEAD\n");
      out.write("                        for(var i=0; i < ob.length; i++){\n");
      out.write("                                script = document.createElement('script');\n");
      out.write("                                script.type = 'text/javascript';\n");
      out.write("                                if(ob[i].src != \"\" && ob[i].src != null){\n");
      out.write("                                    script.src = ob[i].src;\n");
      out.write("                                }else{\n");
      out.write("                                    script.text = ob[i].text;\n");
      out.write("                                }\n");
      out.write("                                head.appendChild(script);\n");
      out.write("                        }\n");
      out.write("                        // borramos los elementos SCRIPT del target original\n");
      out.write("                        for(var i=0; i < ob.length; i++){\n");
      out.write("                            ob[i].parentNode.removeChild(ob[i]);\n");
      out.write("                        }\n");
      out.write("                    }\n");
      out.write("                }\n");
      out.write("            }\n");
      out.write("\n");
      out.write("\n");
      out.write("            afterAjaxRequest();\n");
      out.write("            ajaxHandler.ajaxTarget = '';\n");
      out.write("            ajaxRequestNumber++;\n");
      out.write("        }\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    var ajaxLoadingDivTimeout;\n");
      out.write("    function beforeAjaxRequest(){\n");
      out.write("        if (document.getElementById('modalAjaxLoadingDiv')) {\n");
      out.write("            ajaxLoadingDivTimeout = setTimeout('if(document.body)document.body.style.cursor = \"wait\"; if(document.getElementById(\\'modalAjaxLoadingDiv\\')); document.getElementById(\\'modalAjaxLoadingDiv\\').style.display=\\'block\\';',300);\n");
      out.write("        } else {\n");
      out.write("            ajaxLoadingDivTimeout = setTimeout('if(document.body)document.body.style.cursor = \"wait\";if(document.getElementById(\\'ajaxLoadingDiv\\')); document.getElementById(\\'ajaxLoadingDiv\\').style.display=\\'block\\'',300);\n");
      out.write("        }\n");
      out.write("    }\n");
      out.write("    function afterAjaxRequest(){\n");
      out.write("        if(document.body)document.body.style.cursor = 'default';\n");
      out.write("        if ( ajaxLoadingDivTimeout ) clearTimeout(ajaxLoadingDivTimeout);\n");
      out.write("        if (document.getElementById('modalAjaxLoadingDiv')) document.getElementById('modalAjaxLoadingDiv').style.display='none';\n");
      out.write("        if(document.getElementById('ajaxLoadingDiv')) document.getElementById('ajaxLoadingDiv').style.display='none';\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    var ajaxReq = ajaxHandler.ajaxReq;\n");
      out.write("    if (ajaxReq != null) {\n");
      out.write("        ajaxReq.onreadystatechange = ajaxHandler.ajaxResponse;\n");
      out.write("        if (body) {\n");
      out.write("            ajaxReq.open('POST', url, true);\n");
      out.write("            //XMLHttpRequest handles only UTF-8\n");
      out.write("            ajaxReq.setRequestHeader(\"Content-Type\", \"multipart/form-data; charset=UTF-8; boundary=\" + boundary);\n");
      out.write("        } else {\n");
      out.write("            ajaxReq.open('GET', url, true);\n");
      out.write("        }\n");
      out.write("        if (ajaxAlertsEnabled)\n");
      out.write("            alert(\"Sending body:\\n\" + body);\n");
      out.write("        ajaxReq.send(body);\n");
      out.write("        if (ajaxAlertsEnabled)\n");
      out.write("            alert(\"Loading \" + url + \" into \" + tagId);\n");
      out.write("        return false;\n");
      out.write("    }\n");
      out.write("    return true;\n");
      out.write("};\n");
      out.write("\n");
      out.write("function getBody(element) {\n");
      out.write("    var body = '';\n");
      out.write("    if (element && element.name) {\n");
      out.write("        body += '--' + boundary + '\\r\\n';\n");
      out.write("        body += 'Content-Disposition: form-data; name=\"' + element.name + '\"' + '\\r\\n\\r\\n';\n");
      out.write("        body += element.value + '\\r\\n';\n");
      out.write("    }\n");
      out.write("    return body;\n");
      out.write("};\n");
      out.write("\n");
      out.write("/**\n");
      out.write("* Returns the body multipart representation for a form, adding an ajaxAction parameter.\n");
      out.write("*/\n");
      out.write("function getFormBody(form) {\n");
      out.write("    return getFormBody(form, true);\n");
      out.write("};\n");
      out.write("\n");
      out.write("/**\n");
      out.write("* Returns the body multipart representation for a form, adding an ajaxAction parameter, depending on second parameter.\n");
      out.write("*/\n");
      out.write("function getFormBody(form, addAjaxParameter) {\n");
      out.write("    var body = '';\n");
      out.write("    for (var i = 0; i < form.length; i++) {\n");
      out.write("        field = form[i];\n");
      out.write("        if (!field.name || field.name=='')\n");
      out.write("            continue;\n");
      out.write("        if (field.type == 'checkbox' || field.type == 'radio') {\n");
      out.write("            if (field.checked)\n");
      out.write("                body += getBody(field);\n");
      out.write("        }\n");
      out.write("        else if ((field.type == 'select-one' || field.type == 'select-multiple')) {\n");
      out.write("            for (var j = 0; j < field.length; j++) {\n");
      out.write("                if (field[j].selected) {\n");
      out.write("                    value = field[j].value;\n");
      out.write("                    if (value == '') value = field[j].text;\n");
      out.write("                    body += '--' + boundary + '\\r\\n';\n");
      out.write("                    body += 'Content-Disposition: form-data; name=\"' + field.name + '\"' + '\\r\\n\\r\\n';\n");
      out.write("                    body += value + '\\r\\n';\n");
      out.write("                }\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("        else {\n");
      out.write("            body += getBody(field);\n");
      out.write("        }\n");
      out.write("    }\n");
      out.write("    if(addAjaxParameter){\n");
      out.write("        if(ajaxAlertsEnabled)\n");
      out.write("            alert(\"Adding ajax parameter to form to be sent\");\n");
      out.write("        body += '--' + boundary + '\\r\\n';\n");
      out.write("        body += 'Content-Disposition: form-data; name=\"ajaxAction\"' + '\\r\\n\\r\\n';\n");
      out.write("        body += 'true\\r\\n';\n");
      out.write("    }\n");
      out.write("    else{\n");
      out.write("        if(ajaxAlertsEnabled)\n");
      out.write("            alert(\"Getting form body without ajax parameter: \"+addAjaxParameter);\n");
      out.write("    }\n");
      out.write("    body += \"--\" + boundary;\n");
      out.write("    form=null;\n");
      out.write("    return body + \"--\";\n");
      out.write("};\n");
      out.write("\n");
      out.write("var ajaxPreviousHandlers = new Object();\n");
      out.write("\n");
      out.write("function setAjaxTarget(element, targetId) {\n");
      out.write("    return setAjaxTarget(element, targetId,  null,  null);\n");
      out.write("};\n");
      out.write("\n");
      out.write("function submitAjaxForm(form) {\n");
      out.write("    if (form) {\n");
      out.write("        if (form.onsubmit && (ajaxRequestNumber < ajaxMaxRequestNumber)) {\n");
      out.write("            var wasAjaxed = false;\n");
      out.write("            var formClass = form.styleClass;\n");
      out.write("            if (formClass) {\n");
      out.write("                 wasAjaxed = formClass.indexOf('ajaxedElement') != -1;\n");
      out.write("            }\n");
      out.write("            if(wasAjaxed) {\n");
      out.write("                form.onsubmit();\n");
      out.write("            }\n");
      out.write("            else if (form.onsubmit()) {\n");
      out.write("                submitForm(form);\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("        else {\n");
      out.write("            submitForm(form);\n");
      out.write("        }\n");
      out.write("    }\n");
      out.write("};\n");
      out.write("\n");
      out.write("function submitForm(form) {\n");
      out.write("    if (form) {\n");
      out.write("        // Double click control.\n");
      out.write("        form.onsubmit = function() {\n");
      out.write("            processDoubleClick();\n");
      out.write("            return false;\n");
      out.write("        };\n");
      out.write("        // Submit the form.\n");
      out.write("        form.submit();\n");
      out.write("    }\n");
      out.write("}\n");
      out.write("\n");
      out.write("function processDoubleClick() {\n");
      out.write("\tvar message = \"");
      if (_jspx_meth_i18n_005fmessage_005f0(_jspx_page_context))
        return;
      out.write("\";\n");
      out.write("    alert(message);\n");
      out.write("}\n");
      out.write("\n");
      out.write("function sendFormToHandler(form, component, property){\n");
      out.write("    prepareFormForHandler(form, component, property);\n");
      out.write("    submitAjaxForm(form);\n");
      out.write("};\n");
      out.write("\n");
      out.write("function prepareFormForHandler(form, component, property){\n");
      out.write("    setFormInputValue(form, '");
      out.print(FactoryURL.PARAMETER_BEAN);
      out.write("', component );\n");
      out.write("    setFormInputValue(form, '");
      out.print(FactoryURL.PARAMETER_PROPERTY);
      out.write("', property );\n");
      out.write("    setFormInputValue(form, '");
      out.print(Parameters.DISPATCH_ACTION);
      out.write("', \"_factory\" );\n");
      out.write("};\n");
      out.write("\n");
      out.write("function getFormInputValue( form, name ){\n");
      out.write("    for (var i = 0; i < form.length; i++) {\n");
      out.write("        var field = form[i];\n");
      out.write("        if (!field.name) continue;\n");
      out.write("        if(field.name == name){\n");
      out.write("            return field.value;\n");
      out.write("        }\n");
      out.write("    }\n");
      out.write("    return null;\n");
      out.write("};\n");
      out.write("\n");
      out.write("function setFormInputValue( form, name, value ){\n");
      out.write("    for (var i = 0; i < form.length; i++) {\n");
      out.write("        var field = form[i];\n");
      out.write("        if (!field.name) continue;\n");
      out.write("        if(field.name == name){\n");
      out.write("            field.value = value;\n");
      out.write("            return;\n");
      out.write("        }\n");
      out.write("    }\n");
      out.write("    var theHidden = document.createElement('input');\n");
      out.write("    theHidden.type = 'hidden';\n");
      out.write("    theHidden.name = name;\n");
      out.write("    theHidden.value = value;\n");
      out.write("    form.appendChild(theHidden);\n");
      out.write("    form=null;\n");
      out.write("};\n");
      out.write("\n");
      out.write("function setAjaxTarget(element, targetId, onAjaxRequestScript, onAjaxResponseScript) {\n");
      out.write("    var elementClass = element.styleClass;\n");
      out.write("    if ( elementClass ){\n");
      out.write("        var wasAjaxed = elementClass.indexOf('ajaxedElement') != -1;\n");
      out.write("        if ( wasAjaxed ) return;\n");
      out.write("        element.styleClass += ' ajaxedElement';\n");
      out.write("    }\n");
      out.write("    if (element.nodeName.toLowerCase() == \"a\") {\n");
      out.write("        var destination = element.href;\n");
      out.write("        if (element.onclick) eval('ajaxPreviousHandlers[\\'' + element.id + '\\']=element.onclick;');\n");
      out.write("        element.onclick = function() {\n");
      out.write("\n");
      out.write("            // Double click control.\n");
      out.write("            if (element) {\n");
      out.write("                element.onclick = function() {\n");
      out.write("                    processDoubleClick();\n");
      out.write("                    return false;\n");
      out.write("                };\n");
      out.write("            }\n");
      out.write("            // Evaluate first the user defined 'onclick' function (if any).\n");
      out.write("            var clickReturn = true;\n");
      out.write("            if ( ajaxPreviousHandlers[this.id] ){\n");
      out.write("                clickReturn = ajaxPreviousHandlers[this.id]();\n");
      out.write("                //alert(\"There is a previous handler \"+ajaxPreviousHandlers[this.id]+\" that says \" + clickReturn);\n");
      out.write("            }\n");
      out.write("            // Process the link.\n");
      out.write("            if (clickReturn != false) {\n");
      out.write("                // Check max consecutive ajax request.\n");
      out.write("                if (ajaxRequestNumber >= ajaxMaxRequestNumber) return true;\n");
      out.write("                eval(\"ret = ajaxRequest('\" + destination + \"&ajaxAction=true', null, '\" + targetId + \"', '\" + onAjaxRequestScript + \"', '\" + onAjaxResponseScript + \"')\");\n");
      out.write("                element=null;\n");
      out.write("                return ret;\n");
      out.write("            } else {\n");
      out.write("                element=null;\n");
      out.write("                return false;\n");
      out.write("            }\n");
      out.write("        };\n");
      out.write("        element = null;\n");
      out.write("    }\n");
      out.write("    else if (element.nodeName.toLowerCase() == \"form\") {\n");
      out.write("        var containsFileInputs = false;\n");
      out.write("        if (element.elements) {\n");
      out.write("            for( elementIndex=0; elementIndex < element.elements.length; elementIndex++){\n");
      out.write("                var inputElement = element.elements[elementIndex];\n");
      out.write("                if( inputElement.type == 'file' ){\n");
      out.write("                    containsFileInputs = true;\n");
      out.write("                    break;\n");
      out.write("                }\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("        if (containsFileInputs && !isFileUploadSupported()) {\n");
      out.write("            if(ajaxAlertsEnabled)alert('Form containing file inputs cannot be set to use Ajax');\n");
      out.write("            return false;\n");
      out.write("        }\n");
      out.write("        else {\n");
      out.write("            if(ajaxAlertsEnabled)alert('Form not containing file inputs can be set to use Ajax');\n");
      out.write("        }\n");
      out.write("        if (element.onsubmit) {\n");
      out.write("            eval('ajaxPreviousHandlers[\\'' + element.id + '\\']=element.onsubmit;');\n");
      out.write("        }\n");
      out.write("        //alert(\"Putting new onsubmit for \"+element.id);\n");
      out.write("        element.onsubmit = function() {\n");
      out.write("\n");
      out.write("            // Double click control.\n");
      out.write("            if (element) {\n");
      out.write("                element.onsubmit = function() {\n");
      out.write("                    processDoubleClick();\n");
      out.write("                    return false;\n");
      out.write("                };\n");
      out.write("            }\n");
      out.write("            // Evaluate first the user defined 'onsubmit' function (if any).\n");
      out.write("            var clickReturn = true;\n");
      out.write("            if ( ajaxPreviousHandlers[this.id] ){\n");
      out.write("                clickReturn = ajaxPreviousHandlers[this.id]();\n");
      out.write("                //alert(\"There is a previous handler \"+ajaxPreviousHandlers[this.id]+\" that says \" + clickReturn);\n");
      out.write("            }\n");
      out.write("            // Submit the form.\n");
      out.write("            if (clickReturn != false) {\n");
      out.write("                var ret = false;\n");
      out.write("                // Check max consecutive ajax request.\n");
      out.write("                if (ajaxRequestNumber >= ajaxMaxRequestNumber) return true;\n");
      out.write("                eval(\"ret = ajaxRequest(this.action?this.action:'Controller', getFormBody(this, true), '\" + targetId + \"', '\" + onAjaxRequestScript + \"', '\" + onAjaxResponseScript + \"');\");\n");
      out.write("                return ret;\n");
      out.write("            } else {\n");
      out.write("                element=null;\n");
      out.write("                return false;\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("    } else {\n");
      out.write("        if (ajaxAlertsEnabled)\n");
      out.write("            alert(\"Unsupported element nodeName \" + element.nodeName);\n");
      out.write("    }\n");
      out.write("    return true;\n");
      out.write("};\n");
      out.write("\n");
      out.write("/**\n");
      out.write("* Modifies an item (form or anchor), so if it is inside a panel, it loads inside the panel area.\n");
      out.write("*/\n");
      out.write("function doSetAjax(elementId) {\n");
      out.write("    return doSetAjax(elementId, null, null);\n");
      out.write("};\n");
      out.write("/**\n");
      out.write("* Modifies an item (form or anchor), so if it is inside a panel, it loads inside the panel area.\n");
      out.write("*/\n");
      out.write("function doSetAjax(elementId, onAjaxRequestScript, onAjaxResponseScript) {\n");
      out.write("    if (window.XMLHttpRequest || window.ActiveXObject) {\n");
      out.write("        if (ajaxAlertsEnabled) alert(\"Looking for panel enclosing \" + elementId)\n");
      out.write("        var element = document.getElementById(elementId);\n");
      out.write("        if (!element) {\n");
      out.write("            if (ajaxAlertsEnabled) alert(\"No item with id \" + elementId + \" found.\");\n");
      out.write("            return;\n");
      out.write("        }\n");
      out.write("        var parentElement = element.parentNode;\n");
      out.write("        while (parentElement) {\n");
      out.write("            if (parentElement && parentElement.id && (parentElement.id.indexOf(\"");
      out.print(HTTPSettings.AJAX_AREA_PREFFIX);
      out.write("\") == 0)) {\n");
      out.write("                if (ajaxAlertsEnabled) alert(\"Found \" + parentElement.id);\n");
      out.write("                var retValue = setAjaxTarget(element, parentElement.id, onAjaxRequestScript, onAjaxResponseScript);\n");
      out.write("                element = null;\n");
      out.write("                parentElement = null;\n");
      out.write("                return retValue;\n");
      out.write("            }\n");
      out.write("            parentElement = parentElement.parentNode;\n");
      out.write("        }\n");
      out.write("        if (ajaxAlertsEnabled) {\n");
      out.write("            alert(\"Cannot find panel envolving item with id \" + elementId);\n");
      out.write("        }\n");
      out.write("        element = null;\n");
      out.write("        parentElement = null;\n");
      out.write("    }\n");
      out.write("};\n");
      out.write("\n");
      out.write("function setAjax(elementId) {\n");
      out.write("    return setAjax(elementId, null, null);\n");
      out.write("};\n");
      out.write("\n");
      out.write("function setAjax(elementId, onAjaxRequestScript, onAjaxResponseScript) {\n");
      out.write("    if (ajaxRequestNumber > ajaxMaxRequestNumber) return false;\n");
      out.write("    if (NS || IE || OP || FX || CH) setTimeout(\"doSetAjax('\" + elementId + \"', '\" + onAjaxRequestScript + \"', '\" + onAjaxResponseScript + \"')\", 1);\n");
      out.write("};\n");
      out.write("\n");
      out.write("function isFileUploadSupported() {\n");
      out.write("    return false;\n");
      out.write("};\n");
      out.write("\n");
      out.write("function refreshPanel(id) {\n");
      out.write("    setTimeout(\"doRefreshPanel('\"+ id + \"')\",10);\n");
      out.write("};\n");
      out.write("\n");
      out.write("function doRefreshPanel(id) {\n");
      out.write("    var formm = document.getElementById('");
      out.print(AjaxRefreshManager.FORM_IDENTIFIER_PREFFIX);
      out.write("'+id);\n");
      out.write("    submitAjaxForm(formm);\n");
      out.write("    formm = null;\n");
      out.write("};\n");
      out.write("\n");
      out.write("function dropPanelToRegion(regionId, panelId, position){\n");
      out.write("    if (panelId.indexOf('Panel:') == 0){\n");
      out.write("        document.panelDragAndDropToRegion.panelId.value=panelId.substring('Panel:'.length);\n");
      out.write("        document.panelDragAndDropToRegion.region.value=regionId;\n");
      out.write("        document.panelDragAndDropToRegion.position.value=position;\n");
      out.write("        document.panelDragAndDropToRegion.submit();\n");
      out.write("    } else {\n");
      out.write("        document.instanceDragAndDropToRegion.panelId.value=panelId;\n");
      out.write("        document.instanceDragAndDropToRegion.region.value=regionId;\n");
      out.write("        document.instanceDragAndDropToRegion.position.value=position;\n");
      out.write("        document.instanceDragAndDropToRegion.submit();\n");
      out.write("    }\n");
      out.write("};\n");
      out.write("\n");
      out.write("var currentExpandedDiv = null; ");
      out.write("\n");
      out.write("var maxVisibleItems = 13; ");
      out.write("\n");
      out.write("var expandedNode = null; ");
      out.write("\n");
      out.write("\n");
      out.write("function popupExpand(id){\n");
      out.write("    var elm = document.getElementById(id);\n");
      out.write("    if(!elm) return;\n");
      out.write("    if(elm.style.display=='block'){\n");
      out.write("        elm.style.display='none';\n");
      out.write("    } else {\n");
      out.write("        elm.style.display='block';\n");
      out.write("    }\n");
      out.write("    if (currentExpandedDiv!=null) {\n");
      out.write("        document.getElementById(currentExpandedDiv).style.display='none';\n");
      out.write("        document.getElementById('panel_navigation_right').style.display='none';\n");
      out.write("        document.getElementById('panel_navigation_left').style.display='none';\n");
      out.write("        document.getElementById('panel_navigation_right_disabled').style.display='none';\n");
      out.write("        document.getElementById('panel_navigation_left_disabled').style.display='none';\n");
      out.write("        currentExpandedDiv=null;\n");
      out.write("    }\n");
      out.write("    elm = null;\n");
      out.write("};\n");
      out.write("\n");
      out.write("function manageBoldness(id) {\n");
      out.write("    document.getElementById(\"parent_\"+id).style.fontWeight='bold';\n");
      out.write("    if (expandedNode != null && expandedNode != \"parent_\"+id) document.getElementById(expandedNode).style.fontWeight='normal';\n");
      out.write("    expandedNode = \"parent_\"+id;\n");
      out.write("};\n");
      out.write("\n");
      out.write("function showSection(amount) {\n");
      out.write("    if (amount>0 && isLastSection()) return;\n");
      out.write("    if (amount<1 && isFirstSection()) return;\n");
      out.write("    clearSection();\n");
      out.write("    var currentSection = Number(document.getElementById(currentExpandedDiv+\"_current_section\").value);\n");
      out.write("    var nextSection = currentSection + Number(amount);\n");
      out.write("    var maxItems = Number(document.getElementById(currentExpandedDiv+\"_maxUid\").value);\n");
      out.write("    var start;\n");
      out.write("    var end;\n");
      out.write("    if (currentSection < nextSection) {\n");
      out.write("        end = nextSection * maxVisibleItems;\n");
      out.write("        start = end - maxVisibleItems;\n");
      out.write("    } else {\n");
      out.write("        end = (currentSection + Number(amount)) * maxVisibleItems;\n");
      out.write("        start = end - maxVisibleItems;\n");
      out.write("    }\n");
      out.write("    var i;\n");
      out.write("    for (i=start; (i<end && i<maxItems); i++) {\n");
      out.write("        document.getElementById(currentExpandedDiv+\"_displayable_\"+i).style.display=\"block\";\n");
      out.write("    }\n");
      out.write("    document.getElementById(currentExpandedDiv+\"_current_section\").value=nextSection;\n");
      out.write("\n");
      out.write("    if(!isLastSection()) {\n");
      out.write("        document.getElementById('panel_navigation_right').style.display='block';\n");
      out.write("        document.getElementById('panel_navigation_right_disabled').style.display='none';\n");
      out.write("    } else {\n");
      out.write("        document.getElementById('panel_navigation_right').style.display='none';\n");
      out.write("        document.getElementById('panel_navigation_right_disabled').style.display='block';\n");
      out.write("    }\n");
      out.write("    if(!isFirstSection()) {\n");
      out.write("        document.getElementById('panel_navigation_left').style.display='block';\n");
      out.write("        document.getElementById('panel_navigation_left_disabled').style.display='none';\n");
      out.write("    } else {\n");
      out.write("        document.getElementById('panel_navigation_left').style.display='none';\n");
      out.write("        document.getElementById('panel_navigation_left_disabled').style.display='block';\n");
      out.write("    }\n");
      out.write("};\n");
      out.write("\n");
      out.write("function goToSection(num) {\n");
      out.write("    var currentSection = Number(document.getElementById(currentExpandedDiv+\"_current_section\").value);\n");
      out.write("    showSection(num-currentSection);\n");
      out.write("};\n");
      out.write("\n");
      out.write("function isFirstSection() {\n");
      out.write("    if (Number(document.getElementById(currentExpandedDiv+\"_current_section\").value)==1) return true;\n");
      out.write("    return false;\n");
      out.write("};\n");
      out.write("\n");
      out.write("function isLastSection() {\n");
      out.write("    var currentSection = Number(document.getElementById(currentExpandedDiv+\"_current_section\").value);\n");
      out.write("    return currentSection == getLastSection();\n");
      out.write("};\n");
      out.write("\n");
      out.write("function getLastSection() {\n");
      out.write("    var maxItems = Number(document.getElementById(currentExpandedDiv+\"_maxUid\").value);\n");
      out.write("\n");
      out.write("    var section = parseInt(maxItems/maxVisibleItems);\n");
      out.write("    if (maxItems % maxVisibleItems > 0) section ++;\n");
      out.write("    return section;\n");
      out.write("};\n");
      out.write("\n");
      out.write("function clearSection() {\n");
      out.write("    var currentSection = Number(document.getElementById(currentExpandedDiv+\"_current_section\").value) * maxVisibleItems;\n");
      out.write("    var maxItems = Number(document.getElementById(currentExpandedDiv+\"_maxUid\").value);\n");
      out.write("    var start = currentSection - maxVisibleItems;\n");
      out.write("\n");
      out.write("    var i;\n");
      out.write("    for (i=start; i<currentSection && i<maxItems; i++) {\n");
      out.write("        document.getElementById(currentExpandedDiv+\"_displayable_\"+i).style.display=\"none\";\n");
      out.write("    }\n");
      out.write("};\n");
      out.write("\n");
      out.write("function doItDraggable(id){\n");
      out.write("    var dragItem = new Draggable(id, {\n");
      out.write("        ghosting: !IE,\n");
      out.write("        onDrag: function(){\n");
      out.write("            if( document.selection )\n");
      out.write("                document.selection.empty();\n");
      out.write("        },\n");
      out.write("        onStart: function(draggable, event){\n");
      out.write("            showPanelDropZones();\n");
      out.write("            showRegionDropZones();\n");
      out.write("            hideModalDivBackground();\n");
      out.write("        },\n");
      out.write("        onEnd: function(draggable, event){\n");
      out.write("            hidePanelDropZones();\n");
      out.write("            hideRegionDropZones();\n");
      out.write("            showModalBackgroundDiv();\n");
      out.write("            $(id).style.position = 'relative';\n");
      out.write("        },\n");
      out.write("        revert:true});\n");
      out.write("};\n");
      out.write("\n");
      out.write("\n");
      out.write("function hideModalDivBackground() {\n");
      out.write("    modifyModalBackgroundDiv(false);\n");
      out.write("}\n");
      out.write("\n");
      out.write("function showModalBackgroundDiv() {\n");
      out.write("    modifyModalBackgroundDiv(true);\n");
      out.write("}\n");
      out.write("\n");
      out.write("function modifyModalBackgroundDiv(showIt) {\n");
      out.write("    document.getElementById('vellumNoShade').style.display = showIt ? \"block\" : \"none\";\n");
      out.write("}\n");
      out.write("\n");
      out.write("function expandPanelDiv(id) {\n");
      out.write("    var currentDiv = document.getElementById(id);\n");
      out.write("    if (currentDiv != null) {\n");
      out.write("        if (currentExpandedDiv != null) {\n");
      out.write("            document.getElementById(currentExpandedDiv).style.display='none'\n");
      out.write("            goToSection(1);\n");
      out.write("        }\n");
      out.write("        document.getElementById(id).style.display='block'\n");
      out.write("        currentExpandedDiv = id;\n");
      out.write("        document.getElementById('panel_navigation_right').style.display='none';\n");
      out.write("        document.getElementById('panel_navigation_left').style.display='none';\n");
      out.write("        document.getElementById('panel_navigation_left_disabled').style.display='none';\n");
      out.write("        document.getElementById('panel_navigation_right_disabled').style.display='none';\n");
      out.write("\n");
      out.write("\tdocument.getElementById(currentExpandedDiv+\"_current_section\").value = 2;\n");
      out.write("\tgoToSection(1);\n");
      out.write("\t//if (!isLastSection()) {\n");
      out.write("        //    document.getElementById('panel_navigation_right').style.display='block';\n");
      out.write("        //    document.getElementById('panel_navigation_left_disabled').style.display='block';\n");
      out.write("        //}\n");
      out.write("    }\n");
      out.write("};\n");
      out.write("\n");
      out.write("function checkDraggable(id,uid){\n");
      out.write("    var draggableTable = document.getElementById(id + \"_draggable_\" + uid);\n");
      out.write("    if(draggableTable.style.cursor!='move'){\n");
      out.write("        draggableTable.style.cursor = 'move';\n");
      out.write("        doItDraggable(id + \"_draggable_\" + uid);\n");
      out.write("    }\n");
      out.write("    draggableTable = null;\n");
      out.write("}\n");
      out.write("\n");
      out.write("\n");
      out.write("var doDraggableTimeout;\n");
      out.write("\n");
      out.write("function doDraggable(id){\n");
      out.write("    var dragItem = new Draggable(id, {\n");
      out.write("        ghosting: !IE,\n");
      out.write("        onDrag: function(){\n");
      out.write("            if( document.selection )\n");
      out.write("                document.selection.empty();\n");
      out.write("        },\n");
      out.write("        onStart: function(draggable, event){\n");
      out.write("            doDraggableTimeout = setTimeout('showPanelDropZones();showRegionDropZones(); clearTimeout(doDraggableTimeout); doDraggableTimeout = null;',1);\n");
      out.write("        },\n");
      out.write("        onEnd: function(draggable, event){\n");
      out.write("            if( doDraggableTimeout ) {\n");
      out.write("                clearTimeout(doDraggableTimeout);\n");
      out.write("            } else {\n");
      out.write("                window.disableMenuForPanel = true;\n");
      out.write("            }\n");
      out.write("            hidePanelDropZones();\n");
      out.write("            hideRegionDropZones();\n");
      out.write("            $(id).style.position = 'relative';\n");
      out.write("        },\n");
      out.write("        revert:true});\n");
      out.write("};\n");
      out.write("\n");
      out.write("function doDropable(id, regionId, numPanels){\n");
      out.write("    Droppables.add(id, {\n");
      out.write("        accept: 'popupDraggable',\n");
      out.write("        hoverclass: 'dropOnRegion',\n");
      out.write("        onDrop: function(element) {\n");
      out.write("            var droppedId = element.firstChild.innerHTML;\n");
      out.write("            if(!droppedId)\n");
      out.write("                droppedId = element.getElementsByTagName('span')[0].innerHTML;\n");
      out.write("            dropPanelToRegion(regionId, droppedId, numPanels);\n");
      out.write("        }\n");
      out.write("    });\n");
      out.write("}\n");
      out.write("\n");
      out.write("/////////////////////////////////////////////////////\n");
      out.write("function showPanelDropZones(){\n");
      out.write("    modifyPanelDropZones(true);\n");
      out.write("};\n");
      out.write("\n");
      out.write("function hidePanelDropZones(){\n");
      out.write("    modifyPanelDropZones(false);\n");
      out.write("};\n");
      out.write("\n");
      out.write("function showRegionDropZones(){\n");
      out.write("    modifyRegionDropZones(true);\n");
      out.write("};\n");
      out.write("\n");
      out.write("function hideRegionDropZones(){\n");
      out.write("    modifyRegionDropZones(false);\n");
      out.write("};\n");
      out.write("/////////////////////////////////////////////////////\n");
      out.write("function modifyPanelDropZones(showThem) {\n");
      out.write("    modifyDropZone( \"panelDropZoneContainer\", showThem );\n");
      out.write("};\n");
      out.write("function modifyRegionDropZones(showThem) {\n");
      out.write("    modifyDropZone( \"regionDropZoneContainer\", showThem );\n");
      out.write("};\n");
      out.write("/////////////////////////////////////////////////////\n");
      out.write("function modifyDropZone(modifiablePrefix, showThem ){\n");
      out.write("    var alldivs = document.getElementsByTagName(\"div\");\n");
      out.write("    for (i = 0; i < alldivs.length; i++) {\n");
      out.write("        var divElement = alldivs[i];\n");
      out.write("        if ( divElement.id && (divElement.id.indexOf(modifiablePrefix) == 0) ){\n");
      out.write("            //Change status for given div.\n");
      out.write("            if (showThem) {\n");
      out.write("                divElement.style.display = \"block\";\n");
      out.write("            }\n");
      out.write("            else {\n");
      out.write("                divElement.style.display = \"none\";\n");
      out.write("            }\n");
      out.write("            if (showThem && IE) { //Fix heights\n");
      out.write("                if(divElement.style.pixelHeight >0){\n");
      out.write("                    divElement.style.height = divElement.style.pixelHeight+\"px\";\n");
      out.write("                    var internalDivs = divElement.getElementsByTagName(\"div\");\n");
      out.write("                    for (var j=0; j<internalDivs.length; j++){\n");
      out.write("                        internalDivs[j].style.height = divElement.style.pixelHeight+\"px\";\n");
      out.write("                    }\n");
      out.write("                }\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("    }\n");
      out.write("};\n");
      out.write("\n");
      out.write("function centerModalDiv(id) {\n");
      out.write("    Event.observe(window, 'load', function() {\n");
      out.write("        doCenterModalDiv();\n");
      out.write("    });\n");
      out.write("}\n");
      out.write("\n");
      out.write("function doCenterModalDiv() {\n");
      out.write("    var element = $('ModalDialogPopUp');\n");
      out.write("    if (!(element = $(element))) return;\n");
      out.write("\n");
      out.write("    var vpWidth = $(document).viewport.getWidth();\n");
      out.write("    var width = element.getWidth();\n");
      out.write("\n");
      out.write("    element.style.left = (vpWidth / 2) - (width / 2) + 'px';\n");
      out.write("\n");
      out.write("    var vpHeight = $(document).viewport.getHeight();\n");
      out.write("    var height = element.getLayout().get('margin-box-height');\n");
      out.write("    var scrollTop = $(document).viewport.getScrollOffsets().top;\n");
      out.write("\n");
      out.write("    var avTop = (vpHeight / 2) - (height / 2) + scrollTop;\n");
      out.write("\n");
      out.write("    if (avTop <= 10)\n");
      out.write("    avTop = 10;\n");
      out.write("\n");
      out.write("    element.style.top = avTop+ 'px';\n");
      out.write("    element.scrollTo();\n");
      out.write("    element.style.display = 'block';\n");
      out.write("}\n");
    } catch (Throwable t) {
      if (!(t instanceof SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_i18n_005fmessage_005f0(PageContext _jspx_page_context)
          throws Throwable {
    PageContext pageContext = _jspx_page_context;
    JspWriter out = _jspx_page_context.getOut();
    //  i18n:message
    org.apache.taglibs.i18n.MessageTag _jspx_th_i18n_005fmessage_005f0 = (org.apache.taglibs.i18n.MessageTag) _005fjspx_005ftagPool_005fi18n_005fmessage_0026_005fkey.get(org.apache.taglibs.i18n.MessageTag.class);
    _jspx_th_i18n_005fmessage_005f0.setPageContext(_jspx_page_context);
    _jspx_th_i18n_005fmessage_005f0.setParent(null);
    // /common/rs/ajax.jsp(283,16) name = key type = null reqTime = true required = true fragment = false deferredValue = false deferredMethod = false expectedTypeName = null methodSignature = null 
    _jspx_th_i18n_005fmessage_005f0.setKey("ui.ajax.doubleClickWarn");
    int _jspx_eval_i18n_005fmessage_005f0 = _jspx_th_i18n_005fmessage_005f0.doStartTag();
    if (_jspx_eval_i18n_005fmessage_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      if (_jspx_eval_i18n_005fmessage_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
        out = _jspx_page_context.pushBody();
        _jspx_th_i18n_005fmessage_005f0.setBodyContent((javax.servlet.jsp.tagext.BodyContent) out);
        _jspx_th_i18n_005fmessage_005f0.doInitBody();
      }
      do {
        out.write("! Por favor, espere a que finalice la petici\\u00F3n en curso !");
        int evalDoAfterBody = _jspx_th_i18n_005fmessage_005f0.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
      if (_jspx_eval_i18n_005fmessage_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
        out = _jspx_page_context.popBody();
      }
    }
    if (_jspx_th_i18n_005fmessage_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fi18n_005fmessage_0026_005fkey.reuse(_jspx_th_i18n_005fmessage_005f0);
      return true;
    }
    _005fjspx_005ftagPool_005fi18n_005fmessage_0026_005fkey.reuse(_jspx_th_i18n_005fmessage_005f0);
    return false;
  }
}
